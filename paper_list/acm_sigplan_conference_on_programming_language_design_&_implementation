A programmable programming language | M Felleisen, RB Findler, M Flatt… - … of the ACM, 2018 - dl.acm.org | … For a concrete example, see Figure 1 for a diagram of the architecture of a recently  developed pair of scripting languages for video editing2,b designed to assist people who turn  recordings of conference presentations into YouTube videos and channels. Most of that work is …
Prototypes of productivity tools for the Jadescript programming language | G Petrosino, E Iotti, S Monica, F Bergenti - Proceedings of the\(22^{\rm …, 2021 - ceur-ws.org | … Xtext is an open-source framework for the development of DSLs and programming  languages. It is designed to lift most of the burden of the programming language designer, not  only by taking the usual tasks of a parser generator, but also by providing a set of advanced tools …
A golden age of hardware description languages: Applying programming language techniques to improve design productivity | L Truong, P Hanrahan - … Advances in Programming Languages  …, 2019 - drops.dagstuhl.de | … by their software language counterparts. This paper identifies three problem domains that  lie at the intersection of programming languages and hardware: language design, compiler  infrastructure, and formal methods. For those unfamiliar with the hardware design process or …
A vision of miking: interactive programmatic modeling, sound language composition, and self-learning compilation | D Broman - … of the 12th ACM SIGPLAN International Conference on …, 2019 - dl.acm.org | … In Companion of the 18th annual ACM SIGPLAN conference on Objectoriented programming,  systems, languages, and applications. … In PLDI ’00: Proceedings of the ACM SIGPLAN 2000  conference on Programming language design and implementation. ACM Press, New York, …
Developing Distributed Systems with Multitier Programming | P Weisenburger, G Salvaneschi - … 13th ACM International Conference …, 2019 - dl.acm.org | … programming language design, in particular multitier programming, reactive programming and  event-based systems. He is the main developer of the ScalaLoci multitier programming language.  … ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, …
What is a Secure Programming Language? | C Cifuentes, G Bierman - … Advances in Programming Languages …, 2019 - drops.dagstuhl.de | … are insecure, including even the most recent ones that come with claims that they are designed  to be “secure”. Our real criticism … programming language design. We propose a simple  data-driven definition for a secure programming language: that it provides first-class language …
Here we go again: Why is it difficult for developers to learn another programming language? | N Shrestha, C Botta, T Barik… - … International Conference …, 2020 - ieeexplore.ieee.org | … The interviews revealed that programmers make failed attempts to relate a new programming  language with what they already know. Our findings inform design implications for technical  authors, toolsmiths, and language designers, such as designing documentation and …
Static duplicate bug-report identification for compilers | J Chen, W Hu, D Hao, Y Xiong… - SCIENTIA SINICA …, 2019 - engine.scichina.com | … In: Proceedings of 2010 ACM/IEEE 32nd International Conference on Software Engineering,  Cape Town, 2010. 45--54. Google Scholar … bug reports using natural language and execution  information. In: Proceedings of the 30th International Conference on Software Engineering…
Structural language models of code | U Alon, R Sadaka, O Levy… - International Conference …, 2020 - proceedings.mlr.press | … We introduce the task of any-code completion – generating code in a general-purpose  programming language without any restriction on its … In Proceedings of the 39th ACM SIGPLAN  Conference on Programming Language Design and Implementation, pp. 404–419, 2018. …
Interdisciplinary programming language design | M Coblenz, J Aldrich, BA Myers… - … of the 2018 ACM SIGPLAN …, 2018 - dl.acm.org | … The intent of this essay is to provoke thought regarding language design methodologies for  language designers. We present some criticisms of historical language designs not to berate  those designers for not using methods of which they were unaware, but instead to show how …
Learning Rust: How Experienced Programmers Leverage Resources to Learn a New Programming Language | P Abtahi, G Dietz - … of the 2020 CHI Conference on Human Factors in …, 2020 - dl.acm.org | … We conclude each section by outlining the design implications for creating languages  and resources. It should be noted that our results are specific to learning Rust, a systems  programming language, and may not be directly generalizable to other languages. …
FaCT: a DSL for timing-sensitive computation | S Cauligi, G Soeller, B Johannesmeyer… - … SIGPLAN Conference …, 2019 - dl.acm.org | Real-world cryptographic code is often written in a subset of C intended to execute in constant-time,  thereby avoiding timing side channel vulnerabilities. This C subset eschews structured  programming as we know it: if-statements, looping constructs, and procedural abstractions …
Initialize once, start fast: application initialization at build time | C Wimmer, C Stancu, P Hofer, V Jovanovic… - … ACM on Programming …, 2019 - dl.acm.org | Initialize once, start fast: application initialization at build time | Proceedings of the ACM on  Programming Languages ACM Digital Library home … In Proceedings of the ACM SIGPLAN  Conference on Object-Oriented Programming Systems, Languages, and Applications . …
What language?-The choice of an introductory programming language | O Ezenwoye - 2018 IEEE Frontiers in Education Conference  …, 2018 - ieeexplore.ieee.org | … from this study will influence the design of future educational programming languages, as  well as provide … languages that were designed for ease of learning of programming [10], [13],  [14], [11]. These languages which emphasize simplicity, often come with a visual programming …
On Designing Applied DSLs for Non-programming Experts in Evolving Domains | HS Borum, H Niss, P Sestoft - … Conference on Model Driven …, 2021 - ieeexplore.ieee.org | … programming language design [15]. Evaluative techniques have a central position in HCD  for programming languages, possibly because programing language design … classification  for programming languages where each class has its own reasons for language evolution. We …
Live coding machine learning and machine listening: a survey on the design of languages and environments for live coding | C Kiefer, T Magnusson - … International Conference on Live Coding …, 2019 - iclc.toplap.org | … of research and practice in programming language design (Ko 2016), and computer music  language design in particular, as well … design of live coding systems for music (Reina et al.  2019). The language and user interface design will build on recent research in creative coding …
A Programming Language for Data Privacy with Accuracy Estimations | E Lobo-Vesga, A Russo, M Gaboardi - … on Programming Languages and …, 2021 - dl.acm.org | … the design and implementation of several programming languages to ease the implementation  of differentially private analyses. Even though these programming … To overcome this  limitation, we present DPella, a programming framework providing data analysts with support for …
A programming language for sound self-adaptive systems | B Porter, R Rodrigues Filho - … IEEE International Conference on …, 2021 - ieeexplore.ieee.org | … For the second question our methodology has been to design and implement a new  programming language, and test the generality of that language across a … We propose that a  programming language designed with hot-swap soundness guarantees will minimally assure that: …
The first programming language and freshman year in computer science: characterization and tips for better decision making | SR Sobral - World Conference on Information Systems and …, 2020 - Springer | … science curriculum recommendations haven’t clearly defined which programming language  … a programming language choice for the first programming unit in higher education computer  … Special Purposes: Some programming languages are designed for specific purposes. C is …
It was never about the language: paradigm impact on software design decisions | LM Castro - Proceedings of the Computational Methods in Systems …, 2020 - Springer | … In this paper, however, we argue that programming languages have a secondary role in  software development design decisions. We illustrate, based on a practical example, how  the main influencer are higher-level traits: those traditionally assigned with …
Investigating the essential of meaningful automated formative feedback for programming assignments | Q Hao, JP Wilson, C Ottaway, N Iriumi… - … Visual Languages …, 2019 - ieeexplore.ieee.org | … Based on the findings, this study provides practical guidance on the design of automated  feedback. … The key of this study is the design of feedback. Synthesizing the literature on  feedback, we classified common feedback into three types in the context of computing education: 1) …
The Usability Argument for Refinement Typed Genetic Programming | A Fonseca, P Santos, S Silva - … Conference on Parallel Problem Solving …, 2020 - Springer | … We introduce the Æon programming language as an example of a language with polymorphism  and non-liquid refinements. This language can … Ada is another language that supports  design by contract [4], and it is very popular for critical embedded development, being used for …
Challenges in Quantum Programming Languages (Invited Talk) | P Selinger - 3rd International Conference on Formal Structures …, 2018 - drops.dagstuhl.de | … and current challenges in the design of quantum programming languages. Unlike classical  … For this reason, I advocate the use of strongly typed, functional programming languages for  … ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI …
Enabling language engineering for the masses | M Barash - … Conference on Model Driven Engineering Languages …, 2020 - dl.acm.org | … Implementing a software language—be it a modeling language or a programming  language—requires specifying its syntax, as well as static … Recently, an array of tools designed  to define software languages together with their IDEs have appeared under the name of language …
Software language comprehension using a program-derived semantics graph | RG Iyer, Y Sun, W Wang, J Gottschlich - arXiv preprint arXiv:2004.00768, 2020 - arxiv.org | … The PSG is PL-agnostic and is a graphical representation of our hierarchical abstract semantic  concept language, the PSL. We have designed … In ACM SIGPLAN Conference on Programming  Language Design and Implementation, PLDI ’13, Seattle, WA, USA, June 16-19, 2013, …
A tutorial introduction to quantum circuit programming in dependently typed Proto-Quipper | P Fu, K Kishida, NJ Ross, P Selinger - International Conference on …, 2020 - Springer | … questions for the programming language community [18]: How should we design programming  languages for quantum computation? How … programming languages? In this paper, we  focus on quantum circuit programming using the linear dependently typed functional language …
TinyAPL–Agent Oriented Programming Language Architecture | V Braga, D CIORBA, I Cojuhari - 2020 - cris.utm.md | … and reasoning [3] have to be in synergy with same language design and grammar. It can be  inappropriate to have different grammar structure … This paper will present a common frame  for this abstract agent oriented and domain specific language - tinyAPL grammar, architecture …
CS 252r: Advanced Topics in Programming Languages | EK Zhang - 2021 - ekzhang.com | … Oftentimes, we hear the phrase “library design is language design.” Will does not agree  completely with this statement, as part of good language design is using the weakest  language possible, like having regular expressions to represent certain string languages. …
A tour of gallifrey, a language for geodistributed programming | M Milano, R Recto, T Magrino… - … Programming Languages …, 2019 - drops.dagstuhl.de | … replicated objects to programmers in a way that allows them to reason simply about their  code. We propose an answer to this question in our ongoing work designing a new language,  Gallifrey, … In Proceedings of the 2nd ACM SIGPLAN workshop on Functional high-performance …
A simple context-oriented programming extension to an FRP language for small-scale embedded systems | T Watanabe - … Workshop on Context-Oriented Programming …, 2018 - dl.acm.org | … This paper presents a simple COP extension to Emfrp, a purely functional reactive programming  language designed for resourceconstrained embedded systems. The extension provides  a layer mechanism with implicit layer activation. Also, the extension introduces a feature to …
A rhetorical framework for programming language evaluation | SK Muller, H Ringler - Proceedings of the 2020 ACM SIGPLAN …, 2020 - dl.acm.org | … This listing and categorization was developed primarily in relation to the design of programming  languages. In this essay, we consider a broader set of programming languages publications  including analysis algorithms and tools, metalanguages, calculi, and so on. As such, we …
On machine learning and programming languages | M Innes, S Karpinski, V Shah, D Barber… - 2018 - discovery.ucl.ac.uk | … Graph IRs and formats like XLA, ONNX and NNVM are becoming ever more sophisticated  and will likely take more inspiration from traditional language design, perhaps even becoming  fully-fledged programming languages. TensorFlow’s XLA has started a push towards special…
Extending Resource-Aware ML with Probabilistic Programming | E Wu - 2019 - andrew.cmu.edu | … The methods used are interesting theoretically, and the method could be extended to other  languages and inspire future research. With further development, this research could … We  will also have a regular meeting to talk about progress and discuss ideas on the theory side. …
The Software Language Extension Problem | M Leduc, T Degueule, E Van Wyk… - Software and Systems …, 2020 - Springer | … constraints when considering language extension and believe the Language Extension  Problem will … of programming languages and drove much research in programming languages.  … consequence of interesting language design choices, relative to some specific scenarios. …
A Functional Reactive Programming Language for Small-Scale Embedded Systems with Recursive Data Types | A Yokoyama, S Moriguchi, T Watanabe - Journal of Information …, 2021 - jstage.jst.go.jp | … reactive programming (FRP) language designed for resource-constrained embedded systems.  Functional reactive programming is a programming … Emfrp is a domain-specific language  based on FRP, designed and developed for small-scale embedded systems. Because the …
Less-Java, more learning: language design for introductory programming | ZO Nasrawt, MO Lam - Journal of Computing Sciences in Colleges, 2019 - ccsc.org | … Abstract We present Less-Java, a new procedural programming language with a simple  and concise syntax, implicit but strong typing via … -Java, a new programming language along  with a reference compiler. Less-Java limits the constructs available to the programmer to avoid …
AI Programmer: autonomously creating software programs using genetic algorithms | K Becker, J Gottschlich - … and Evolutionary Computation Conference …, 2021 - dl.acm.org | … programming language-specific genome construction and elimination techniques. We  provide a detailed examination of AI Programmer’s system design, … In Proceedings of the 37th  ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI ’16, …
A randomized controlled trial on the impact of polyglot programming in a database context | PM Uesbeck - Open access series in informatics, 2019 - par.nsf.gov | … To analyze the results, we ran a mixed designs repeated measures ANOVA using the R  programming language with respect to time to solution, using task as a within-subjects variable  and group and database experience as between-subjects variables. Sphericity was tested …
Evolution of the WebDSL runtime: reliability engineering of the WebDSL web programming language | DM Groenewegen, E Chastelet, E Visser - … Engineering of Programming, 2020 - dl.acm.org | … and hosting integrated websites for conferences with multiple co-located events, used by all  ACM SIGPLAN and SIGSOFT … web programming languages, and our experiences in creating  applications, we identify 5 design principles for WebDSL which guide the language design …
Value-dependent session design in a dependently typed language | J de Muijnck-Hughes, E Brady… - arXiv preprint arXiv …, 2019 - arxiv.org | … system for protocol design, implementation, and verification such that we provide a selfcontained  system within a single language. Of … In Chandra Krintz & Emery Berger, editors:  Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and …
Exploratory Experiments on Programming Autonomous Robots in Jadescript | E Iotti, G Petrosino, S Monica, F Bergenti - arXiv preprint arXiv:2007.11741, 2020 - arxiv.org | … A recent agent-oriented programming language called Jadescript is presented in this paper  together with its new features specifically designed to handle events. Exploratory experiments  on a simple case-study application are presented to show the validity of the proposed …
Design and Development of Automotive Workshop Application Based on Android and IOS Using Dart Programming Language | R Ahmad - Journal of Physics: Conference Series, 2020 - iopscience.iop.org | … Dart is a general purpose programming language[10]. Dart is intended to provide a platform that  is specifically … programming language for creating complex, browser-based web applications.  The useful features of the Dart programming language that enables the programmer to …
Scenic: a language for scenario specification and scene generation | DJ Fremont, T Dreossi, S Ghosh, X Yue… - … SIGPLAN Conference …, 2019 - dl.acm.org | … We propose a new probabilistic programming language for the design and analysis of  perception systems, especially those based on … We show how a probabilistic programming  language can help address these problems by specifying distributions encoding interesting …
PathMiner: a library for mining of path-based representations of code | V Kovalenko, E Bogomolov, T Bryksin… - … Conference on …, 2019 - ieeexplore.ieee.org | … PathMiner supports mining of code in Java as well as Python and is designed to be easily  extensible to support other programming languages. We achieve this extensibility by providing  a convenient extension point for parsers generated by ANTLR [16]. In addition, in the …
Timewise data processing with programming language ASAMPL | VY Peschanskii - Scientific Notes of Taurida National …, 2020 - tech.vernadskyjournals.in.ua | … Thus, there is a number of papers [3–9] which presents programming languages developed  for a certain specific purpose. In particular, research [8] presents an approach of programmable  programming languages. The general view on programming languages design is given …
Cross-platform binary code similarity detection based on NMT and graph embedding | X Zhu, L Jiang, Z Chen - Mathematical Biosciences and …, 2021 - aimspress.com | Cross-platform binary code similarity detection is determining whether a pair of binary functions  coming from different platforms are similar, and plays an important role in many areas.  Traditional methods focus on using platform-independent characteristic strands intersecting or …
Towards a simple and safe Objective Caml compiling framework for the synchronous language SIGNAL | Z Yang, JP Bodeveix, M Filali - Frontiers of Computer Science, 2019 - Springer | … This paper presents a simple and safe compiler, called MinSIGNAL, from a subset of the  synchronous dataflow language SIGNAL to C, as well as … As a modern functional language,  OCaml is adapted to symbolic computation and so, particularly suitable for compiler design and …
Essay on History of the D Programming | MK Larnøy - … of Programming Languages: Collection of Student … - bldl.ii.uib.no | … To further cater to C-programmers D is interface compatible with C, one of the core design  goals of D was that" a syntactical construction should … Richie, The development of the C  language, HOPL-II: The second ACM SIGPLAN conference on History of programming languages, …
The Lean 4 Theorem Prover and Programming Language | L Moura, S Ullrich - International Conference on Automated Deduction, 2021 - Springer | … Lean 4 is also an efficient functional programming language based on a novel  programming paradigm called functional but in-place. Efficient code generation is crucial for  Lean users because many write custom proof automation procedures in Lean itself. …
go-pmem: Native support for programming persistent memory in go | JS George, M Verma, R Venkatasubramanian… - … Technical Conference  …, 2020 - usenix.org | … a simple and complete programming model, or go through complicated steps to keep it  simple. We argue that programming languages already man… In Proceedings of the 40th ACM  SIGPLAN Conference on Programming Language Design and Implementation, pages 316–332. …
IELE: A rigorously designed language and tool ecosystem for the blockchain | T Kasampalis, D Guth, B Moore, TF Șerbănuță… - … Symposium on Formal …, 2019 - Springer | … specifications of programming languages. Given the syntax and semantics of a … a language  that offers clear separation between in-contract computation and inter-contract communication  to facilitate formal reasoning about smart contracts, and Simplicity [2], a language designed …
Quantum programming language: A systematic review of research topic and top cited languages | S Garhwal, M Ghorani, A Ahmad - Archives of Computational Methods in …, 2021 - Springer | … Valiron [67] discussed the needs and challenges in the design of quantum programming  language. Ying et al. [68] surveyed techniques and … In: Proceedings of the 44th ACM  SIGPLAN symposium on principles of programming languages (POPL2017), pp 846–858 …
Synthesizing Precise and Useful Commutativity Conditions | K Bansal, E Koskinen, O Tripp - Journal of Automated Reasoning, 2020 - Springer | … the 13th ACM SIGPLAN symposium on principles and practice of parallel programming,  2008), dynamic concurrency (Tripp et al. in Proceedings of the 33rd ACM SIGPLAN conference  on programming language design and implementation, PLDI ’12, New York, NY, USA, ACM, …
CC 2021: Proceedings of the 30th ACM SIGPLAN International Conference on Compiler Construction | A Smith, D Demange, R Gupta - … ACM SIGPLAN International Conference …, 2021 - dl.acm.org | … design choices in compilers, and in particular for domain specific languages. The days where  a single universal compiler intermediate ... … When building a new programming language,  it can be useful to compose parts of existing languages to avoid repeating implementation …
Quasar, a high-level programming language and development environment for designing smart vision systems on embedded platforms | B Goossens, H Luong, J Aelterman… - … in Europe Conference …, 2018 - ieeexplore.ieee.org | … programming framework that handles many complex aspects in the design of smart vision  systems on embedded platforms, such as parallelization, data flow management, scheduling  and load balancing. Quasar, as a highlevel programming language… ” in ACM SIGPLAN notices…
What Kind of Programming Language Best Suits Integrative AGI? | B Goertzel - International Conference on Artificial General …, 2020 - Springer | … AI system design and programming language design. Numerous researchers have come to  the conclusion that, to make the radical AI advances they sought, they would require a better  and more AI-friendly programming language environment. Thus we got languages like LISP …
CScript: A distributed programming language for building mixed-consistency applications | K De Porre, F Myter, C Scholliers, EG Boix - Journal of Parallel and …, 2020 - Elsevier | … To help programmers develop mixed-consistency applications, we argue that distributed  programming languages should have (1) built-in … We compare to JSON CRDTs because  they are designed to build custom CRDTs and are thus similar to SECROs which are meant to …
Latent execution for neural program synthesis beyond domain-specific languages | X Chen, D Song, Y Tian - Advances in Neural Information …, 2021 - proceedings.neurips.cc | … (DSLs), and cannot be easily applied to popular general-purpose programming languages.  For example, to synthesize C programs, we … has been commonly used in recent language  models [16, 11, 4]. We consider designing general-purpose number representation for better …
On the semantics of loop transformation languages | A Susungi - … on Art, Science, and Engineering of Programming, 2018 - dl.acm.org | … In Proceedings of the 34th ACM SIGPLAN Conference on Programming Language  Design and Implementation (PLDI ’13). ACM, New York, NY, USA, 519–530. https://doi.org/10.1145/2491956.2462176  [10] Michel Steuwer, Christian Fensch, Sam Lindley, and Christophe …
RefinedC: automating the foundational verification of C code with refined ownership types | M Sammler, R Lepigre, R Krebbers… - … Language Design and …, 2021 - dl.acm.org | Given the central role that C continues to play in systems software, and the difficulty of writing  safe and correct C code, it remains a grand challenge to develop effective formal methods  for verifying C programs. In this paper, we propose a new approach to this problem: a type …
What Are Semantics for Hardware? | G Bernstein, R Daly, J Ragan-Kelley, P Hanrahan - 2021 - capra.cs.cornell.edu | … In Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design  and Implementation. 296–311. … Predictable accelerator design with time-sensitive affine types.  In Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design …
SyReNN: A Tool for Analyzing Deep Neural Networks | M Sotoudeh, AV Thakur - Tools and Algorithms for the Construction …, 2021 - ncbi.nlm.nih.gov | … Our tool is designed for analyses using low-dimensional subsets of the input space, a unique  design point in the space of DNN analysis tools. … Proceedings of the 40th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2019, Phoenix, AZ, …
Practical detection of concurrency issues at coding time | L Bläser - … of the 27th ACM SIGSOFT International Symposium on …, 2018 - dl.acm.org | … In our case, this is a self-designed virtual stack machine code, resembling the .NET  intermediate language, although extended with … In In PLDI âĂŹ06: Proceedings of the 2006  ACM SIGPLAN conference on Programming language design and implementation. ACM Press…
Compiler and Runtime Approaches to Enable Large-Scale Irregular Programs | M Kulkarni - 2020 - osti.gov | … In particular, we have designed a framework that provides an abstract representation of the  schedule of computation for recursive … ACM SIGPLAN Conference on Programming Language  Design and Implementation, PLDI 2015, pages 509–520, New York, NY, USA, 2015. ACM…
Defining a high-level programming model for emerging NVRAM technologies | T Shull, J Huang, J Torrellas - … Conference on Managed Languages & …, 2018 - dl.acm.org | … Many of these languages focus on attaining the orthogonal persistence defined by Atkinson  and Morrison [8], where the persistency of an application is orthogonal to its design. Previous  persistent programming languages are designed for a two-level storage model with orders …
Designing Packetc Programming Language for Reliable Network Apps | R Duncan - Proceedings of the 2018 VII International Conference …, 2018 - dl.acm.org | … In a broad sense our contribution is making reliability a central design criterion in designing  a DSL for packet processing, an application … reliability by designing particular language  constructs in packetC [3, 4], a domain-specific language (DSL) for network packet processing …
PLIERS: A Process that Integrates User-Centered Methods into Programming Language Design | M Coblenz, G Kambhatla, P Koronkevich… - … on Computer-Human …, 2021 - dl.acm.org | … question: How can programming language designers leverage data from users to improve  language usability? We can refine … programming language design process, which shows  how user-centered methods can contribute to many different phases of programming language …
A survey of multitier programming | P Weisenburger, J Wirth, G Salvaneschi - ACM Computing Surveys …, 2020 - dl.acm.org | … 2.1 Benefits of Multitier Programming In this section, we provide an overview of the main  advantages offered by the MT language design. We report … MT programming belongs to a  long tradition of programming language design for distributed systems with influential distributed …
Tutorial: LLVM for Security Practitioners | J Criswell - 2020 IEEE Secure Development (SecDev), 2020 - ieeexplore.ieee.org | Many security researchers need to build tools that analyze and transform code. For example,  researchers may want to build security hardening tools, tools that find vulnerabilities within  software, or tools that prove that a program is invulnerable to attack. This tutorial will guide …
User-centered design of permissions, typestate, and ownership in the Obsidian blockchain language | MJ Coblenz, J Aldrich, J Sunshine… - … : Studying, Designing …, 2018 - cs.cmu.edu | … design criterion for programming languages [12, 15] to argue that this is likely to produce  evidence that is relevant to the language we are designing. … Many techniques promote program  correctness, but our focus is on programming language design so that we can prevent bugs …
A Survey on Semantic Parsing for Machine Programming | C Lee, J Gottschlich, D Roth - … on Programming Language …, 2021 - plpworkshop.com | … language processing and understanding have seen major advances. Yet, while some of  these techniques can be applied to programming language … to design neural models to better  capture the complex nature of both natural language and source code in translating natural …
Quantum Calculi—From Theory to Language Design | M Zorzi - Applied Sciences, 2019 - mdpi.com | … language design. Moreover, we propose an overview of some interesting languages and  open-source platforms for quantum programming … Therefore, the design of the type system for  a quantum programming language necessarily has to address the problem of data linearity. In …
Deductive verification of distributed protocols in first-order logic | O Padon - 2018 - ieeexplore.ieee.org | Formal verification of infinite-state systems, and distributed systems in particular, is a long  standing research goal. In the deductive verification approach, the programmer provides  inductive invariants and pre/post specifications of procedures, reducing the verification problem to …
Hint-typing, optimistic compilation of Dynamic Languages | M Serrano - www-sop.inria.fr | … not to fit the JavaScript design whose unique combination of antagonistic features such as  functional programming support, high mutation … for dynamic languages. In Proceedings of  the 2009 ACM SIGPLAN Conference on Programming Language Design and Implementation, …
Outlining Systemof C Compiler Algorithm for Retargetable Coding in Network Processors | R Kaur, S Kumar, C Shree - academia.edu | … Amarasinghe, “Bitwidth Analysis with Application to Silicon Compilation,” ACM SIGPLAN  Conference on Program Language Design and … Wang, “Storage Assignment to Decrease  Code Size,” ACM SIGPLAN Conference on Programming Language Design and Implementation (…
A Compiler-based Approach for Natural Language to Code Conversion | S Sridhar, S Sanagavarapu - … Conference on Computer and …, 2020 - ieeexplore.ieee.org | … C programming language [14] is a procedural programming language that is used for  creating … It is a general purpose and imperative programming language [15] which has … In  Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and …
Extending HLS with High-Level Descriptive Language for Configurable Algorithm-Level Spatial Structure Design | C Wang, S Huang, WM Hwu… - 2021 IEEE 29th Annual …, 2021 - ieeexplore.ieee.org | … propose fusing hardware-friendly design patterns, namely high-level descriptive language,  into imperative programming model on Python. … us to create a new programming model  designed specifically for FPGA architecture. We focus on extending the input language of HLS to …
Finally, a Polymorphic Linear Algebra Language (Pearl) | A Shaikhha, L Parreaux - … on Object-Oriented Programming  …, 2019 - drops.dagstuhl.de | … The design of this domain-specific language (DSL) is inspired by both mathematics and  programming languages: its basic constructs are … This paper aims to solve both these issues  by combining ideas from mathematics and programming languages. The first issue is tackled …
Reversibility in Component-based Programming Language | V Giedrimas - 2018 IEEE 12th International Conference on …, 2018 - ieeexplore.ieee.org | … programming language that makes it possible to use component related concepts such as ports,  interfaces, services etc. at designtime and coding-… that the results from classical programming  languages hold in the reversible paradigm, reversible languages cannot compute non- …
Vectorization for Digital Signal Processors via Equality Saturation Extended Abstract | A VanHattum, R Nigam, VT Lee, J Bornholt… - asplos-conference.org | … This paper designs a compiler, Diospyros, that aims to compete with manual tuning by DSP  experts. Diospyros frames compilation as a … It applies ideas from the programming languages  and formal methods worlds—term rewriting systems, equality saturation, and symbolic …
On representation of simulation time in functional programming style | DV Buzdalov - ИСП, 2018 - ispranproceedings.elpub.ru | … As a first step, we designed a representation of simulation time in terms of abstractions used in  functional programming and tried to study its compositionability properties… Functional  programming languages as a software engineering tool. In Embedded Systems. Lecture Notes in …
Jolie and LEMMA: Model-Driven Engineering and Programming Languages Meet on Microservices | S Giallorenzo, F Montesi, M Peressotti… - International Conference …, 2021 - Springer | … for architectural design. Independently, the community of programming languages has  investigated new linguistic abstractions for effective … cross-pollinate, taking the LEMMA framework  and the Jolie programming language as respective representatives. We establish a common …
VerifAI: A Toolkit for the Formal Design and Analysis of Artificial Intelligence-Based Systems | T Dreossi, DJ Fremont, S Ghosh, E Kim… - International Conference …, 2019 - Springer | … The environment model typically comprises a definition in the simulator of the different  types of agents, plus a description of their initial conditions and other parameters using the  Scenic probabilistic programming language [12]. Finally, the property to be checked can be …
Using game design mechanics as metaphors to enhance learning of introductory programming concepts | C Jemmali, E Kleinman, S Bunian, MV Almeda… - … Conference on the …, 2019 - dl.acm.org | … We present May’s Journey, an educational game that supports learning of basic programming  concepts, where players solve puzzles and interact with the environment by typing in a  custom programming language. The game design seamlessly integrates learning goals, core …
Timed C: An extension to the C programming language for real-time systems | S Natarajan, D Broman - 2018 IEEE Real-Time and Embedded …, 2018 - ieeexplore.ieee.org | … APIs—without explicit support from a programming language—is both complex and error …  of language primitives that we use for creating an extension to the C programming language, …  -art languages for programming realtime systems and motivate the rationale for designing …
Quantum Computing is Getting Real: Architecture, PL, and OS Roles in Closing the Gap between Quantum Algorithms and Machines | FT Chong - … Conference on Architectural Support for Programming …, 2018 - dl.acm.org | … I will outline several grand research challenges in closing this gap, including programming  language design, software and hardware verification, defining and perforating abstraction  boundaries, cross-layer optimization, managing parallelism and communication, mapping and …
Quaverseries: A live coding environment for music performance using web technologies | Q Lan, AR Jensenius - … of the International Web Audio Conference (WAC …, 2019 - duo.uio.no | … Finally, in Section 5, we discuss how the environment fits the language design, and how it  experimentally … programming languages to dance to: live coding with tidal. In Proceedings  of the 2nd ACM SIGPLAN international workshop on Functional art, music, modeling & design, …
Petalisp: A Common Lisp Library for Data Parallel Programming | M Heisig - Proceedings of the 11th European Lisp Symposium on …, 2018 - dl.acm.org | … We describe the design and implementation of Petalisp-a Common Lisp library for data  parallel programming. At its core, Petalisp is a lazy, functional array language. All its statements  are an-alyzed, simplified and compiled at runtime. This approach limits expressive power and …
How Graduate Computing Students Search When Using an Unfamiliar Programming Language | GR Bai, J Kayani, KT Stolee - … of the 28th International Conference on …, 2020 - dl.acm.org | … Therefore, we design a study that involves tasks in a language unfamiliar to the participants  and recruit graduate students in … In our study, we investigated how subsequent language  learners search for code in an unfamiliar programming language, rather than using professional …
AliveInLean: a verified LLVM peephole optimization verifier | J Lee, CK Hur, NP Lopes - International Conference on Computer Aided …, 2019 - Springer | Ensuring that compiler optimizations are correct is important for the reliability of the entire  software ecosystem, since all software is compiled. Alive [ 12 ] is a tool for verifying LLVM’s  peephole optimizations. Since Alive was released, it has helped compiler developers proactively …
MLIR: A compiler infrastructure for the end of Moore's law | C Lattner, M Amini, U Bondhugula, A Cohen… - arXiv preprint arXiv …, 2020 - arxiv.org | … The MLIR project aims to directly tackle these programming language design and implementation  … This paper explores various design points of the MLIR system, relates our experience …  In Proceedings of the ACM SIGPLAN 1994 Conference on Programming Language Design …
Towards practical heterogeneous virtual machines | J Clarkson, J Fumero, M Papadimitriou… - … of Programming, 2018 - dl.acm.org | … In Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language  Design and Implementation (PLDI ’12). ACM, New York, NY, USA, 1–12. https://doi.org/10.1145/2254064.2254066  [4] Juan Fumero, Michel Steuwer, Lukas Stadler, and Christophe Dubach. …
Argosy: Verifying layered storage systems with recovery refinement | T Chajed, J Tassarotti, MF Kaashoek… - … Programming Language …, 2019 - dl.acm.org | Storage systems make persistence guarantees even if the system crashes at any time,  which they achieve using recovery procedures that run after a crash. We present Argosy, a  framework for machine-checked proofs of storage systems that supports layered recovery …
Creating Domain-Specific Languages by Composing Syntactical Constructs | V Palmkvist, D Broman - … on Practical Aspects of Declarative Languages, 2019 - Springer | … Designing and implementing user friendly domain-specific languages (DSLs) requires both  extensive programming language knowledge and domain expertise. Instead of implementing  a DSL compiler or interpreter from scratch, there are several approaches for developing …
Reversible object-oriented programming with region-based memory management | UP Schultz - International Conference on Reversible Computation, 2018 - Springer | … In this paper we present the design and implementation of a version of the Joule reversible  OO language [6] that uses region-based [4, 7] … that this language Joule\(^R\) supports the  implementation of standard OO programming patterns, such as the factory and iterator design …
Cerberus-BMC: A principled reference semantics and exploration tool for concurrent and sequential C | S Lau, VBF Gomes, K Memarian… - International Conference …, 2019 - Springer | … A priori, one might imagine C follows one of two language-design extremes: a concrete  byte-array model with pointers that are simply … In: PLDI 2016: 37th Annual ACM SIGPLAN  Conference on Programming Language Design and Implementation (Santa Barbara), June …
Knowledge graph programming with a human-in-the-loop: Preliminary results | Y Lou, M Uddin, N Brown, M Cafarella - … of the Workshop on Human-In …, 2019 - dl.acm.org | … We aim to build a data compiler using two basic design principles: … though most of this work  has taken place in the programming languages community, there has also been some activities  in data management. The most successful artifact to come from program synthesis work is …
Let's not make a fuzz about it | E Lobo-Vesga - 2021 IEEE/ACM 43rd International Conference …, 2021 - ieeexplore.ieee.org | … programming language research. In this work, we explore a different direction. Instead of  creating a new language from scratch, we design … For that, we show that the library should be  implemented in programming languages where the type-system has some particular features. …
Hedy: A Gradual Language for Programming Education | F Hermans - Proceedings of the 2020 ACM Conference on …, 2020 - dl.acm.org | … a programming language to novices, inspired by educational methods by which punctuation  is taught to children. Hedy starts as a simple programming language … Hedy is a programming  language which gradually adds more syntax, and is designed to lower the syntax barrier by …
Wrex: A unified programming-by-example interaction for synthesizing readable code for data scientists | I Drosos, T Barik, PJ Guo, R DeLine… - … the 2020 CHI conference …, 2020 - dl.acm.org | … for using familiar programming languages, and the desire to customize or extend data  wrangling transforms led to our second design goal: … Data wrangling tools should produce code  as an inspectable and modifiable artifact, using programming languages already familiar to the …
Learning to Find Bugs and Code Quality Problems-What Worked and What not? | V Raychev - 2021 International Conference on Code Quality …, 2021 - ieeexplore.ieee.org | … In Proceedings of the 41st ACM SIGPLAN Conference on Pro- gramming Language  Design and Implementation (PLDI 2020). Association for Computing Machinery, New York,  NY, USA, 1112âĂŞ1127. https://doi.org/10.1145/3385412.3386016 [25] Vincent J. …
C is not a low-level language | D Chisnall - Communications of the ACM, 2018 - dl.acm.org | … Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and  Implementation, … he works on programming language design and implementation. He has  authored books on Xen and the Objective-C and Go programming languages, and contributes …
Bidirectional type checking for relational properties | E Çiçek, W Qu, G Barthe, M Gaboardi… - … Programming Language …, 2019 - dl.acm.org | … Therefore, we design our own algorithm to eliminate existential variables by finding  substitutions for them and use SMT solvers to … As a convention, we write all outputs in red  and all inputs in black. Figure 2 shows selected algorithmic typing rules. We explain below the …
A decision model for programming language ecosystem selection: Seven industry case studies | S Farshidi, S Jansen, M Deldar - Information and Software Technology, 2021 - Elsevier | … on a mixed research method based on design science research, expert interviews,  documentation … meetings and investigation into programming languages before participating  in this research. The experts at the case study companies specified their programming language …
The next 7000 programming languages | R Chatley, A Donaldson, A Mycroft - Computing and Software Science, 2019 - Springer | … of programming languages and that of plants colonising an ecosystem. Here species of  plants correspond to programming languages, and a … Proceedings of the 37th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2016, 13–17 June …
Behind the scenes: developers' perception of multi-language practices | M Abidi, M Grichi, F Khomh - … International Conference on Computer …, 2019 - dl.acm.org | … Through this paper, we aim to assess the perception of developers, regarding the relevance  of multi-language design practices and their … the 2005 ACM SIGPLAN Conference on  Programming Language Design and Implementation, ser. PLDI ’05. ACM, 2005, pp. 62–72. [6] Z. …
Shape-diverse DSLs: languages without borders (vision paper) | F Coulon, T Degueule, T Van Der Storm… - … the 11th ACM SIGPLAN …, 2018 - dl.acm.org | … language workbenches as well as programming languages and ontology languages, to … In  this paper, we envision a language engineering approach enabling (i) language designers …  single DSL and (ii) language users to manipulate language constructs in the most appropriate …
Understanding memory and thread safety practices and issues in real-world Rust programs | B Qin, Y Chen, Z Yu, L Song, Y Zhang - … Programming Language Design …, 2020 - dl.acm.org | … concrete suggestions on the design of future Rust bug detectors and programming tools. With  our … We believe that programmers, researchers, and language designers can use our study  … (better programming practices, better bug detection tools, and better language designs). …
Domain Specific Language for Exascale | S Amarasinghe - 2018 - osti.gov | … We present a domain-specific embedded programming language with support for automating  the most tedious steps of proofs that … ACM SIGPLAN Conference on Programming Language  Design and Implementation, PLDI ’13, pages 519–530, New York, NY, USA, 2013. ACM…
Reactive programming experience with rescala | R Mogk, G Salvaneschi, M Mezini - … , and Engineering of Programming, 2018 - dl.acm.org | … and developers of the language, to provide insights on how choices in the RP language  design influence its use in reactive applications. … section we discuss considerations when  designing an RP language, and show how our case studies guide the design of the language. …
Rust: Powered by Ownership | M Meldrum - 2018 - maxmeldrum.com | … Rust is a systems programming language that has been gaining traction in the recent years.  … Vault [19] is a safe programming language designed by Microsoft Research. It employs a …  the 17th ACM SIGPLAN Conference on Objectoriented Programming, Systems, Languages, …
CodeSeer: input-dependent code variants selection via machine learning | T Wang, N Jain, D Boehme, D Beckingsale… - … Conference on …, 2020 - dl.acm.org | … In Proceedings of the 31st ACM SIGPLAN Conference on Programming Language Design  and Implementation (PLDI ’10). ACM, New York… In Proceedings of the 36th ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI ’15). Association for …
Clara: Performance clarity for smartnic offloading | Y Qiu, Q Kang, M Liu, A Chen - … of the 19th ACM Workshop on Hot …, 2020 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored. Abstracting  with credit is permitted. To copy … of programming. In Proceedings of the ACM SIGPLAN  Conference on Programming Language Design and Implementation, 2005. [17] S. Choi, M. …
A comprehensive study of deep learning compiler bugs | Q Shen, H Ma, J Chen, Y Tian, SC Cheung… - … 29th ACM Joint Meeting …, 2021 - dl.acm.org | … -of-concept application of our ndings by designing a simple but e ective method TVMfuzz for  testing TVM. The design of TVMfuzz is inspired by some ndings … In Proceedings of the 32nd  ACM SIGPLAN conference on Programming language design and implementation. 283–294. …
The Parsley Data Format Definition Language | P Mundkur, L Briesemeister, N Shankar… - 2020 IEEE Security …, 2020 - ieeexplore.ieee.org | … data use substantially different processing pipelines than those used for programming languages.  For example, the actions of a parser for … , are therefore different from those for programming  languages. We describe in §2 our current design of Parsley, an expressive, declarative, …
Deductive verification in decidable fragments with ivy | KL McMillan, O Padon - International Static Analysis Symposium, 2018 - Springer | … Within these constraints, Ivy’s programming language is designed to be as expressive as  possible. We can express in Ivy any update to … Proceedings of the 39th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2018, Philadelphia, PA…
An Empirical Study of the Reliability of High-Level Synthesis Tools | Y Herklotz, Z Du, N Ramanathan… - 2021 IEEE 29th …, 2021 - ieeexplore.ieee.org | … a hardware design using the HLS tool under test and checked whether that hardware design  … HLS tools can be made to generate wrong designs from valid C programs and one tool could  … ACM SIGPLAN Conference on Programming Language Design and Implementation, ser. …
Not so fast: Analyzing the performance of webassembly vs. native code | A Jangda, B Powers, ED Berger, A Guha - … Annual Technical Conference …, 2019 - usenix.org | … programming language supported by all major web browsers. Beyond its many quirks and  pitfalls from the perspective of programming language design, … In Proceedings of the 32nd  ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI ’11, …
Fuzzing binaries for memory safety errors with QASan | A Fioraldi, DC D'Elia, L Querzoni - 2020 IEEE Secure …, 2020 - ieeexplore.ieee.org | … The design of instrumentation frameworks for supporting program analyses over binary-only  software is a largely studied problem in the programming language, systems, and security  research communities [16]. A common requirement for sanitizers, also shared with the fuzz …
What are your programming language's energy-delay implications? | S Georgiou, M Kechagia, P Louridas… - … International Conference …, 2018 - dl.acm.org | … of clever optimizations and design choices in seemingly unexpected programming languages.  … programming languages based on the edp of the implemented programming tasks. By  answering this research question, we will guide practitioners on which programming languages …
A differentiable programming system to bridge machine learning and scientific computing | M Innes, A Edelman, K Fischer, C Rackauckas… - arXiv preprint arXiv …, 2019 - arxiv.org | … Our ∂P system extends the Julia programming language [7] with differentiable programming  capabilities. We chose the Julia … programming system with programmable inference. In  Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and …
Algorithmic Improvisation for Dependable Intelligent Autonomy (Invited Talk) | SA Seshia - 40th IARCS Annual Conference on Foundations of …, 2020 - drops.dagstuhl.de | … In this talk, I will particularly focus on applications to the design of intelligent autonomous  systems, presenting work on randomized planning for robotics and a domain-specific  probabilistic programming language for the design and analysis of learning-based autonomous …
On Solving String Constraints | PD Bui - 2021 - diva-portal.org | … The significant growth of string manipulating programs in modern programming languages,  including Python and JavaScript, demands SMT solvers being capable of analysing string  constraints. This thesis proposes two frameworks for checking the satisfiability of extensive …
Counting immutable beans: Reference counting optimized for purely functional programming | S Ullrich, L de Moura - arXiv preprint arXiv:1908.05647, 2019 - arxiv.org | … and used by the next version of the Lean programming language. • We describe how to  reuse allocations in both user code and language primitives, and give a formal reference-…  In ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI’02). …
Triton: an intermediate language and compiler for tiled neural network computations | P Tillet, HT Kung, D Cox - … Learning and Programming Languages, 2019 - dl.acm.org | … We present Triton, a language and compiler centered around the concept of tile, ie, statically  shaped multi-dimensional sub-arrays. Our approach revolves … In Proceedings of the 34th  ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’13). …
Practical smart contract sharding with ownership and commutativity analysis | G Pîrlea, A Kumar, I Sergey - … Conference on Programming Language …, 2021 - dl.acm.org | … To achieve this, instead of treating contract implementations as łblack boxesž (as do all the  works mentioned above), we design a solution … programming language itself would allow  contract developers to mark certain reads as weak, but neither Scilla nor Solidity, both designed …
Experience report: early experience with grace | A Black, K Bruce - Journal of Computing Sciences in Colleges, 2018 - dl.acm.org | … In 2010, a group of researchers announced a project to design a new object-oriented  programming language, Grace, intended for novice programmers. This is the first published report  on how the language works for teaching programming to novice computer science students. …
50k-c: A dataset of compilable, and compiled, java projects | P Martins, R Achar, CV Lopes - … Conference on Mining Software …, 2018 - ieeexplore.ieee.org | … Copyrights for components of this work owned by others than ACM must be honored.  Abstracting with credit is permitted. To copy otherwise, or republish, to post … Java is one of the  most popular programming languages, and the third most-used programming language in GitHub. …
LNAST: A language neutral intermediate representation for hardware description languages | SH Wang, A Sridhar, J Renau - Proc. 2nd Workshop Open …, 2019 - masc.soe.ucsc.edu | … In industry, there is a long-standing problem of hardware designers spending hours or even  days to wait for the entire design flow to … language, and it hides details about the language  syntax to the back-end compiler stack. It has to be independent of the programming language …
CFRP: A functional reactive programming language for small-scale embedded systems | K Suzuki, K Nagayama, K Sawada… - Theory and Practice of …, 2018 - World Scientific | … Although its design follows the tradition of signalbased FRP languages, our compiler can  generate stand-alone C++ code that can be deployed effectively on resource-constrained  microcontrollers. Through an example, we show that CFRP supports a declarative, modular and …
Paso: A web-based parser for solidity language analysis | GA Pierro, R Tonelli - 2020 IEEE International Workshop on …, 2020 - ieeexplore.ieee.org | … to professional programmers, especially when a programming language has so …  programming language is not mature especially when compared to other languages. It is still in  evolution and new constructs are introduced once in a while to cover new needs and programming …
On Decision Support for Quantum Application Developers: Categorization, Comparison, and Analysis of Existing Technologies | D Vietz, J Barzen, F Leymann, K Wild - International Conference on …, 2021 - Springer | … a programming language can also be embedded into another programming language, for  example, Quipper [21] is embedded in Haskell, and Qiskit [1], PyQuil [28], and Cirq [11] offer  programming languages … 41st ACM SIGPLAN Conference on Programming Language Design …
Filling typed holes with live GUIs | C Omar, D Moon, A Blinn, I Voysey, N Collins… - … Language Design and …, 2021 - dl.acm.org | … , and other orthogonal design details, because we believe livelits can be integrated into a wide  variety of programming systems. Sec. … Our primary implementation, used in the screenshots  in the paper, is integrated into Hazel, a live functional programming environment designed …
Parsing a markup language that supports overlap and discontinuity | RH Dekker, B Buitendijk, E Bleeker - Proceedings of the ACM …, 2020 - dl.acm.org | … Language (TAGML) is a recently developed markup language that offers core support for  overlapping and discontinuous markup. Designing and implementing a markup language … ;  the most prominent being that the markup language cannot be expressed in a recursive context-…
Quantum programming languages | B Heim, M Soeken, S Marshall, C Granade… - Nature Reviews …, 2020 - nature.com | … audiences is reflected in the design and ecosystem of the existing quantum programming  languages, depending on which factors a language prioritizes. In this … The design of quantum  programming languages thus must not only draw from the wealth of experience we have in …
PhD Student session: formally verified postpass scheduling with peephole optimization for AArch64 | L Gourdin - ACTES DES 20ÈMES JOURNÉES, 2021 - lirmm.fr | COMPCERT is a C compiler with a complete machine-checked proof of semantic preservation  from C to assembly [Ler09]. We present here an extension of COMPCERT for AArch64  processors, that optimizes the use of the pipeline in the processor (postpass scheduling) and …
Automatically finding bugs in commercial cyber-physical system development tool chains | SA Chowdhury - Proceedings of the 40th International Conference on …, 2018 - dl.acm.org | … Differential testing of textual programming language compilers and analyses tools have  been … Here we highlight the design of SLforge to address the various CyFuzz limitations (§1).  First, … For the SLforge tool, we designed regular expressionbased parsers to collect Simulink …
Anti-patterns for multi-language systems | M Abidi, F Khomh, YG Guéhéneuc - … Conference on Pattern Languages …, 2019 - dl.acm.org | … programming language specifications to extract bad practices of multi-language systems  usage. We encoded and cataloged these practices in the form of design … Proceedings of the  2005 ACM SIGPLAN Conference on Programming Language Design and Implementation, ser. …
Threaded Code Generation with a Meta-tracing JIT Compiler | Y Izawa, H Masuhara, CF Bolz-Tereick… - arXiv preprint arXiv …, 2021 - arxiv.org | … Currently, we designed the method-traversal interpreter on a tiny language and created a  compiler that can emit a trace tree which contains … Languages. In Proceedings of the 30th  ACM SIGPLAN Conference on Programming Language Design and Implementation (Dublin, Ire- …
Temporal Property-Based Testing of a Timed C Compiler using Time-Flow Graph Semantics | S Natarajan, D Broman - … Specification and Design Languages …, 2020 - ieeexplore.ieee.org | … programming language. The temporal correctness then depends on correctly implementing  the model using a real-time programming language … bugs in c compilers,” in Proceedings of  the 32nd ACM SIGPLAN conference on Programming language design and implementation, …
The essence of Bluespec: a core language for rule-based hardware design | T Bourgeat, C Pit-Claudel, A Chlipala - … Programming Language Design …, 2020 - dl.acm.org | … The challenge in describing designs of this kind is that we often want rules to execute  concurrently even when they … design, namely hardware description languages (HDLs) like  Verilog and Chisel, high-level synthesis from sequential languages, and synchronous languages…
Reverse engineering for reduction parallelization via semiring polynomials | A Morihata, S Sato - … Conference on Programming Language Design …, 2021 - dl.acm.org | Parallel reduction, which summarizes a given dataset, eg, the total, average, and maximum,  plays a crucial role in parallel programming. This paper presents a new approach, reverse  engineering, to automatically discovering nontrivial parallel reductions in sequential programs…
Genie: A generator of natural language semantic parsers for virtual assistant commands | G Campagna, S Xu, M Moradshahi, R Socher… - … SIGPLAN Conference …, 2019 - dl.acm.org | … 2 Principles of VAPL Design Here we discuss the design principles of Virtual Assistant  Programming Languages (VAPL) to make it amenable to natural language translation,  using ThinkTalk as an example. These …
Elastic switch programming with p4all | M Hogan, S Landau-Feibish… - … of the 19th ACM …, 2020 - dl.acm.org | … Our design is oriented around use of symbolic primitives (integers that may take on a range of  possible values at compile … programming language should not be tied to a target’s resources.  The learning curve for programming in P4 is significantly steeper because programmers …
Implications of Programming Language Selection for Serverless Data Processing Pipelines | R Cordingly, H Yu, V Hoang, D Perez… - … Congress (DASC …, 2020 - ieeexplore.ieee.org | … These four languages feature major differences in both language design and FaaS  platform implementation. Go, Java 8, and Python 3.7 use Amazon Linux 1 whereas Node.js  uses version 2. We focused on Java and Python to compare two fundamentally different …
Idiomatic patterns and aesthetic influence in computer music languages | A McPherson, K Tahıroğlu - Organised Sound, 2020 - cambridge.org | … It is this non-neutrality in the context of music programming languages which we explore in  this article. In musical interaction, as in many … In essence, we argue that DMI designers’  actions will be shaped by what a given language makes most apparent, natural or easy to do, …
Structural language models for any-code generation | U Alon, R Sadaka, O Levy, E Yahav - 2019 - openreview.net | … of programming languages to model a code snippet as a tree – structural language modeling  (… can generate arbitrary expressions in any programming language. Our model significantly  … -specific baselines are designed for different tasks: seq2prod is designed for tasks which …
code2seq: Generating sequences from structured representations of code | U Alon, S Brody, O Levy, E Yahav - arXiv preprint arXiv:1808.01400, 2018 - arxiv.org | … that leverages the syntactic structure of programming languages to better encode source code.  … programming languages, and four datasets of up to 16M examples. Our model significantly  outperforms previous models that were specifically designed for programming languages, …
Evaluating Feedback Tools in Introductory Programming Classes | R Reis, G Soares, M Mongiovi… - … Education Conference …, 2019 - ieeexplore.ieee.org | … and Python Tutor in assisting novice programmers in problem solving. Our goal is to analyze  whether using these tools students can solve programming assignments better than when  using … Our evaluation design sought to minimize the threats discussed whenever possible. …
Correctness in Stream Processing: Challenges and Opportunities | C Stanford, K Kallas, R Alur - Conference on Innovative Data …, 2022 - cis.upenn.edu | … If successul, formalization could shape design and tool support for the future of stream  processing systems. Figure 1 shows how formal … In Proceedings of the 38th ACM SIGPLAN  Conference on Programming Language Design and Implementation, pages 693–708, 2017. …
Spatial: A language and compiler for application accelerators | D Koeplinger, M Feldman, R Prabhakar… - … SIGPLAN Conference …, 2018 - dl.acm.org | … languages like Sequoia [16] have demonstrated the benefits of explicit notions of memory  hierarchy to programming language design. … The accelerator design language should  therefore give the user a view of the target memory hierarchy and should include notions of loop …
Ivy: a multi-modal verification tool for distributed algorithms | KL McMillan, O Padon - International Conference on Computer Aided …, 2020 - Springer | … Ivy is a synchronous, reactive programming language [3], meaning that the program only  executes actions in response to input from its … Proceedings of the 39th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2018, Philadelphia, PA…
Virtual machine execution for wearables based on webassembly | M Jacobsson, J Willén - EAI International Conference on Body Area …, 2018 - Springer | … Even though WebAssembly has already been around for some time, the amount of  research is limited and mainly concerns programming language design and semantics (eg, [6,  12]). We have not been able to identify any research work about running WebAssembly on …
HISyn: human learning-inspired natural language programming | Z Nan, H Guan, X Shen - Proceedings of the 28th ACM Joint Meeting on …, 2020 - dl.acm.org | … Genie: A generator of natural language semantic parsers for virtual assistant commands.  In Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design  and Implementation. 394–410. [4] Oscar Chaparro, Jing Lu, Fiorella Zampetti, Laura Moreno, …
A purely functional computer algebra system embedded in Haskell | H Ishii - International Workshop on Computer Algebra in …, 2018 - Springer | … in Haskell, a purely functional programming language. Utilising methods in functional … use  a functional language, some methods in this paper are applicable in imperative languages.  … In: Proceedings of the 8th ACM SIGPLAN Workshop on Types in Language Design and …
Towards higher-level synthesis and co-design with python | A Quenon… - … on Languages, Tools …, 2021 - applications.umons.ac.be | … Several methods have arisen to fasten the hardware design process. Among them, the  high-level synthesis (HLS), ie, the use of a higherlevel programming language than the usual  Verilog or VHDL to create an implementation of a register transfer level (RTL). In this paper, the …
A general approach to modeling Java framework behaviors | L Luo - … of the 29th ACM Joint Meeting on European Software …, 2021 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored. Abstracting  with credit is permitted. To copy otherwise, … In Proceedings of the 41st ACM SIGPLAN  International Conference on Programming Language Design and Implementation, PLDI 2020, …
Probabilistic programming with programmable inference | VK Mansinghka, U Schaechtle, S Handa… - … SIGPLAN Conference …, 2018 - dl.acm.org | … We introduce inference metaprogramming for probabilistic programming languages, including  new language constructs, a formalism, and … hard-coded into the language implementation  as in previous probabilistic programming languages, inference metaprogramming enables …
Real-time audio processing for hearing aids using a model-based bayesian inference framework | MR Villescas, B de Vries, S Stuijk… - Proceedings of the 23th …, 2020 - dl.acm.org | … design steps, namely algorithm development and the embedded implementation. Algorithm  designers favor high-level programming languages … Embedded software, on the other hand,  is preferably implemented using a low-level programming language to allow finer control of …
Demanded abstract interpretation | B Stein, BYE Chang, M Sridharan - … on Programming Language Design …, 2021 - dl.acm.org | … By design, this construction is generic in the underlying programming language and  concrete semantics as well as the abstract domain and abstract semantics. In this section, we  fix a generic programming language and an abstract interpreter interface that serve as inputs to …
Few versatile vs. many specialized collections: how to design a collection library for exploratory programming? | S Marr, B Daloze - … on Art, Science, and Engineering of Programming, 2018 - dl.acm.org | … While collection design seems to be an integral aspect of language design, we are not  aware of any systematic treatment. While there is … In Proceedings of the 34th ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI’13). ACM, 95–104. …
Violat: generating tests of observational refinement for concurrent objects | M Emmi, C Enea - International Conference on Computer Aided …, 2019 - Springer | … ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI  2012, Beijing, China, 11–16 June 2012, pp. … Proceedings of the 44th ACM SIGPLAN  Symposium on Principles of Programming Languages, POPL 2017, Paris, France, 18–20 January …
mimium: a self-extensible programming language for sound and music | T Matsuura, K Jo - … of the 9th ACM SIGPLAN International Workshop on …, 2021 - dl.acm.org | … We propose a programming language for music named mimium, which combines  temporal-discrete control and signal processing in a single language… In the following section, we  describe the detailed language design and implementation of the running environment of mimium. …
Understanding and improving cyber-physical system models and development tools | SA Chowdhury - … IEEE/ACM 40th International Conference on …, 2018 - ieeexplore.ieee.org | … Next, to address the safety-critical aspect of CPS development tools, we discuss the design  and … since CPS modeling languages differ significantly from traditional programming languages  [1]. … Next, we discuss the design, implementation, and evaluation of a testing framework for …
Can Parallel Programming Revolutionize EDA Tools? | YS Lu, K Pingali - Advanced Logic Synthesis, 2018 - Springer | … Recent advances in parallel programming hold the promise of transforming the EDA tools  area and changing the way we design, … research community has made a lot of progress  in the past 10 years in designing abstractions, programming models, compilers, and runtime …
Blended, precise semantic program embeddings | K Wang, Z Su - … SIGPLAN Conference on Programming Language …, 2020 - dl.acm.org | … -known tradeoffs between dynamic and static approaches in programming languages, such  as dynamic and static program analyses — … approaches; rather, they both are valuable,  complementary design choices. We design LiGer centered on being dynamic to learn deep, pre…
Verified Software Units | N Yoshida, L Beringer - Programming Languages and Systems30th …, 2021 - europepmc.org | Modularity-the partitioning of software into units of functionality that interact with each other  via interfaces-has been the mainstay of software development for half a century. In case of  the C language, the main mechanism for modularity is the compilation unit/header file …
Next-generation Web Applications with WebAssembly and TruffleWasm | M Šipek, D Muharemagić, B Mihaljević… - … Convention on …, 2021 - ieeexplore.ieee.org | … Therefore, developers could combine several other programming languages to create a …  assembly-like language used for targeting from other programming languages. The binary …  design allows natural polyglotism within the system, meaning Truffle supported languages can …
Synthesizing JIT compilers for in-kernel DSLs | J Van Geffen, L Nelson, I Dillig, X Wang… - … Conference on Computer …, 2020 - Springer | … In: Proceedings of the 17th ACM SIGPLAN Conference on Programming Language Design  and Implementation (PLDI), Philadephia, PA, pp. … In: Proceedings of the 35th ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI) [3], pp. 530–541 (…
The evolution of blockchain virtual machine architecture towards an enterprise usage perspective | A Tara, K Ivkushkin, A Butean, H Turesson - … Science On-line Conference, 2019 - Springer | … Design and implementation of generics for the .NET Common Language Runtime. In:  Proceedings of the ACM SIGPLAN 2001 conference on Programming language design and  implementation. ACM, New York (2001)Google Scholar …
Characterizing the pedagogical benefits of adaptive feedback for compilation errors by novice programmers | UZ Ahmed, N Srivastava, R Sindhgatta… - … International Conference …, 2020 - dl.acm.org | … of programming language syntax and semantics by the example of C language to construct  programs and solve problems.” A significant component of this course is weekly programming  assignments where students attempt four programming … possibility of designing systems to …
FScaFi : A Core Calculus for Collective Adaptive Systems Programming | R Casadei, M Viroli, G Audrito, F Damiani - International Symposium on …, 2020 - Springer | … All the above considerations led us towards the Scala programming language as the host.  Then, to well design the key constructs and … Computing paradigm, leveraging the solid basis  provided by a mainstream programming language such as Scala and its ecosystem. In fact, …
Programming not only by example | H Peleg, S Shoham, E Yahav - … 40th International Conference …, 2018 - ieeexplore.ieee.org | … Next we show that Claim 1 is applicable to methods that are prevalent in programming  languages and extremely useful in some contexts, and therefore are likely to find their way into  the vocabularies used in synthesis. We consider two classes of methods: invertible methods …
Learning to represent programs with property signatures | A Odena, C Sutton - arXiv preprint arXiv:2002.09030, 2020 - arxiv.org | … For these reasons, we have created a general-pupose, Turing complete programming language  and runtime. The … Synthesis from a Programming Languages Perspective: Most existing  work on synthesis approaches is from the perspective of programming language design. Our …
Functional Reactive Programming for Embedded Systems with GPGPUs | Y Sakurai, S Moriguchi, T Watanabe - … Conference on Software and …, 2021 - dl.acm.org | … , we designed XFRP-G, a data-parallel extension of XFRP. The main contributions of this  paper are as follows: • We designed an FRP language for embedded systems named XFRP-G  that have language … XFRP is a functional reactive programming language for small-scale …
SafeCheck: safety enhancement of Java unsafe API | S Huang, J Guo, S Li, X Li, Y Qi… - … Conference on …, 2019 - ieeexplore.ieee.org | … INTRODUCTION Java is designed as a high-level programming language of strong type and  memory safety guarantees [1]. The security … dynamic binary instrumentation,” in Proceedings  of the 28th ACM SIGPLAN Conference on Programming Language Design and Imple- …
Overfitting in synthesis: Theory and practice | S Padhi, T Millstein, A Nori, R Sharma - … Conference on Computer Aided …, 2019 - Springer | … In: Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design  and Implementation, PLDI, pp. 422–436. ACM (2017). … In: Proceedings of the 37th ACM  SIGPLAN Conference on Programming Language Design and Implementation, PLDI, pp. 42–56. …
A Formal Definition of Swift's Value Semantics | D Racordon - 2020 - archive-ouverte.unige.ch | … Swift is a general-purpose programming language designed as a modern substitute for C-based  languages, such as C/C++ and Objective-C. As such, its semantics departs from that of most  alternative based on a virtual machine. Specifically, Swift distinguishes between …
Cyclic program synthesis | S Itzhaky, H Peleg, N Polikarpova, RNS Rowe… - … Language Design and …, 2021 - dl.acm.org | We describe the first approach to automatically synthesizing heap-manipulating programs with  auxiliary recursive procedures. Such procedures occur routinely in data structure transformations  (eg, flattening a tree into a list) or traversals of composite structures (eg, n-ary trees). …
Towards language-parametric semantic editor services based on declarative type system specifications (Brave new idea paper) | DAA Pelsmaeker, H van Antwerpen… - … -Oriented Programming  …, 2019 - drops.dagstuhl.de | … of a language can be used to provide accurate semantic code completion without additional  work on the part of the language designer. … To use the semantic of the programming language  for code completion, we first need a semantic specification that includes a model for name …
Practical verification of peephole optimizations with Alive | NP Lopes, D Menendez, S Nagarakatte… - … of the ACM, 2018 - dl.acm.org | … Alive aims for a design point that is both practical and formal; it allows compiler writers to  specify … ACM SIGPLAN Conference on Programming Language Design and Implementation,  2015. … We designed Alive to resemble the LLVM IR because our users—the LLVM developers—…
Silq: A high-level quantum language with safe uncomputation and intuitive semantics | B Bichsel, M Baader, T Gehr, M Vechev - … ACM SIGPLAN Conference on …, 2020 - dl.acm.org | … Next, we experimentally compare Silq to other languages. Our comparison focuses on Q#,  because (i) it is one of the most widely used quantum programming languages, (ii) we  consider it to be more high-level than Cirq or QisKit, and (iii) the Q# coding contest [15…
Predictable accelerator design with time-sensitive affine types | R Nigam, S Atapattu, S Thomas, Z Li, T Bauer… - … SIGPLAN Conference …, 2020 - dl.acm.org | … programming language for predictable accelerator design. Dahlia differs from traditional HLS  in two ways: (1) Dahlia makes the hardware implementation for each language … • We design  Dahlia (Section 3), a language that restricts HLS to predictable design spaces by modeling …
A survey of asynchronous programming using coroutines in the Internet of Things and embedded systems | B Belson, J Holdsworth, W Xiang… - ACM Transactions on …, 2019 - dl.acm.org | … of control flow on behalf of the programmer (RQ5b) is a desirable feature of programming  languages on resource-constrained platforms. The … We observe that when a language is  designed from the ground up to support coroutines, then a stackful implementation is common. On …
Reactive programming in Ada 2012 with RxAda | AR Mosteo - Journal of Systems Architecture, 2020 - Elsevier | … This work presents the design of a ReactiveX Ada implementation that aims to balance  desirable library properties such as … design aspects of the library are detailed, showing how  the Flat_Map and Thread abstractions have been implemented following Ada programming …
Automatically Generating Java Benchmarks with Known Errors | M Hurmuz - 2021 - ethz.ch | … Among the types of static analyzers, we consider those based on abstract interpretation [4],  a general methodology for designing static analyzers that … For the other scenarios that we  might encounter, we will try to find a solution based on the way we design our transformations. …
PLIERS: A Process that Integrates User-Centered Methods into Programming Language Design | M Coblenz, G Kambhatla, P Koronkevich… - arXiv preprint arXiv …, 2019 - arxiv.org | … Our focus is a practical one: How can programming language designers leverage data from  users to improve language usability… programming language design process, which shows  how user-centered methods can contribute to many different phases of programming language …
Prusti: deductive verification for Rust (keynote) | AJ Summers - … of the 22nd ACM SIGPLAN International Workshop on …, 2020 - dl.acm.org | … The relatively-new Rust programming language is designed to help with the former  problem: a powerful ownership type system requires programmers to specify and restrict their  discipline for referencing heap locations, providing in return the strong guarantee (almost; we’ll …
Compiler auto-vectorization with imitation learning | C Mendis, C Yang, Y Pu, S Amarasinghe, M Carbin - 2019 - openreview.net | … In order to use these vector units, programmers must either code using platform specific  vector assembly instructions which is tedious, error-prone and results in … In Proceedings of the  fourteenth international conference on artificial intelligence and statistics, pp. 627–635, 2011. …
Testing multithreaded programs via thread speed control | D Chen, Y Jiang, C Xu, X Ma, J Lu - … of the 2018 26th ACM Joint Meeting …, 2018 - dl.acm.org | … next schedule is unclear (and therefore existing techniques are mostly supported by heuristics  [5… We design our alternative representation of Σ such that schedules are easy to generate  … In Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design …
Safe-by-Default Concurrency for Modern Programming Languages | L Liu, T Millstein, M Musuvathi - … on Programming Languages and …, 2021 - dl.acm.org | … ” programming languages follow a design principle that we call safety by default and performance  by choice. By default, these languages enforce important programming … programmers to  explicitly trade some safety guarantees for increased performance. However, these same …
A linear logical framework in Hybrid (invited talk) | AP Felty - … of the 8th ACM SIGPLAN International Conference on …, 2019 - dl.acm.org | … Professor Felty’s research is in the area of theorem proving and other formal methods, with  a focus on the development of logical frameworks for reasoning in a variety of domains,  including programming language design, privacy and security, safety of mobile code, protocol …
What every scientific programmer should know about compiler optimizations? | J Tan, S Jiao, M Chabbi, X Liu - … the 34th ACM International Conference …, 2020 - dl.acm.org | … In Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design  and Implementation (PLDI ’12). … In Proceedings of the 15th ACM SIGPLANSIGACT symposium  on Principles of programming languages. ACM, 12–27. [44] Marija Selakovic and Michael …
Vectorization for digital signal processors via equality saturation | A VanHattum, R Nigam, VT Lee, J Bornholt… - … for Programming …, 2021 - dl.acm.org | … In ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI).  [17] … : a language and compiler for optimizing parallelism, locality, and recomputation in  image processing pipelines. In ACM SIGPLAN Conference on Programming Language Design …
The design of an emerging/multi-paradigm programming languages course | S Perugini - Journal of computing sciences in colleges, 2018 - ecommons.udayton.edu | … ward more dynamic, multi-paradigm languages. To foster course adoption, we discuss the  design of the course, which includes language … To foster adoption, we discuss our design  of the course which includes student presentations/papers of the languages and culminating, …
Usuba: high-throughput and constant-time ciphers, by construction | D Mercadier, PÉ Dagand - … ACM SIGPLAN Conference on Programming …, 2019 - dl.acm.org | … Functional correctness and auditability pushes for the use of a high-level programming  language. Performance and … programming language can reconcile both views and actually  improve on the state of the art of both. Usuba is an opinionated dataflow programming language in …
Synthesizing Pattern Programs from Examples. | S So, H Oh - IJCAI, 2018 - prl.korea.ac.kr | … students to improve their programming skills efficiently. To that end, we first design a  domain-specific language that supports a large class of … In Proceedings of the 34th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI, 2013. [So and Oh, …
Formal Methods for GPGPU Programming: Is the Demand Met? | LB van den Haak, A Wijs, M van den Brand… - International Conference …, 2020 - Springer | … In this paper, we consider mainly the CUDA and OpenCL programming languages. We  work with the CUDA terms, but give the … In: Proceedings of the 38th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2017, pp. 126–140. …
Mendix as a solution for present gaps in Computer Programming in Higher Education | M Litman, D Field - 2018 - researchgate.net | … 2013) In order to understand the students and their skills we designed a survey to allow  students to self-assess their skills and knowledge … All programming languages have facilities  which emulate these abstractions. Traditional programming languages emulate memory through …
SCiJP: Solving Computing Issues by Java Design Pattern | H Gautam, R Johari, R Bhatia - … Conference on Innovative Computing and …, 2020 - Springer | … a innovative model for modularization of design patterns. In [4], … designed in Java  Programming Language and implements Design by Contracts construct. In [5], authors have  presented problems in functional logic languages and proposed solutions using software design …
On the impact of programming languages on code quality: a reproduction study | ED Berger, C Hollenbeck, P Maj, O Vitek… - … Programming Languages …, 2019 - dl.acm.org | … Instead, when pressed to justify their choices, language designers often resort to intuitive  arguments or … programming languages. The article we reproduce here is an influential attempt  to develop a statistical model that relates various aspects of programming language design to …
Non-linear pattern matching with backtracking for non-free data types | S Egi, Y Nishiwaki - Asian Symposium on Programming Languages and …, 2018 - Springer | … to design a new pattern-matching-oriented programming language that satisfies all the above  three criteria. The proposed language features … Since we set our focus in this paper on the  design of the programming language, detailed discussion on the implementation of Egison is …
Exploiting errors for efficiency: a survey from circuits to applications | P Stanley-Marbell, A Alaghi, M Carbin… - ACM Computing …, 2020 - dl.acm.org | … architecture, programming languages, operating systems, and information theory. Rather … ,  architecture, operating system, and programming language levels as well as fundamental …  the computer-aided design and design/test communities versus the programming language and …
C Is Not a Low-level Language: Your computer is not a fast PDP-11. | D Chisnall - Queue, 2018 - dl.acm.org | … Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design … of  Cambridge, where he works on programming language design and implementation. He spent  … Xen and the Objective-C and Go programming languages, as well as numerous articles. He …
Mimalloc: Free list sharding in action | D Leijen, B Zorn, L de Moura - … Symposium on Programming Languages …, 2019 - Springer | … While influenced by the allocation workload of the reference-counted Lean and Koka  programming language, we show that mimalloc has … for unsafe languages. In: Proceedings of  the 27th ACM SIGPLAN Conference on Programming Language Design and Implementation, …
Type-directed scheduling of streaming accelerators | D Durst, M Feldman, D Huff, D Akeley, R Daly… - … SIGPLAN Conference …, 2020 - dl.acm.org | … Although Aetherling does not guarantee that its statically scheduled designs minimize  resource utilization, we show that Aetherling’s … of the Aetherling input language, space-time  language, and scheduler that synthesizes FPGA designs (Section 7). We schedule basic image …
Context-aware and data-driven feedback generation for programming assignments | D Song, W Lee, H Oh - Proceedings of the 29th ACM Joint Meeting on …, 2021 - dl.acm.org | Recently, various techniques have been proposed to automatically provide personalized  feedback on programming exercises. The cutting edge of which is the data-driven approaches  that leverage a corpus of existing correct programs and repair incorrect submissions by using …
On Proving and Disproving Equivalence of Functional Programming Assignments | D Milovancevic, J Giunta, V Kuncak - 2021 - infoscience.epfl.ch | … In this section, we discuss the algorithm we designed to check the correctness of a set of  candidate programs (student solutions) against a … Stainless is a tool for verifying programs  written in a subset of the Scala programming language [32], relying on an SMT solver. It can be …
A Generic Back-End for Exploratory Programming | D Frolich, L Binsbergen - … on Trends in Functional Programming, 2021 - Springer | … design of the back-end is evaluated by defining a variety of interfaces for existing languages…  The chosen definition of languages captures all software language that can have their …  real-world, large-scale, deterministic programming languages – as demonstrated by the body of …
Pallene: a statically typed companion language for lua | HM Gualandi, R Ierusalimschy - … on Programming Languages, 2018 - dl.acm.org | … In Section 3, we describe how we designed Pallene, aiming to combine desirable properties  from those approaches. In Section 4, we discuss how our goals for Pallene affected its  implementation. In Section 5, we evaluate the performance of our prototype implementation of …
Automated refactoring to reactive programming | M Köhler, G Salvaneschi - … IEEE/ACM International Conference …, 2019 - ieeexplore.ieee.org | … designed with traditional abstractions for asynchronous programming. We propose 2RX, a  refactoring approach to automatically convert asynchronous code to reactive programming…  Most programming languages offer means for developers to define asynchronous computations…
On the impact of affine loop transformations in qubit allocation | M Kong - ACM Transactions on Quantum Computing, 2021 - dl.acm.org | … With this goal in mind, we designed and implemented AXL, a domain specific language and  source-to-source compiler for quantum circuits … In Proceedings of the 41st ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI ’20). Association for …
Perffuzz: Automatically generating pathological inputs | C Lemieux, R Padhye, K Sen, D Song - Proceedings of the 27th ACM …, 2018 - dl.acm.org | … of manually provided annotations or programming language restrictions. These methods do  … In Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design  … In Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design …
Trends in relational program verification | B Beckert, M Ulbrich - Principled Software Development, 2018 - Springer | … In: Proceedings of the 31st ACM SIGPLAN-SIGACT Symposium on Principles of Programming  Languages, POPL 2004, Venice, Italy, … In: Proceedings of the 36th ACM SIGPLAN Conference  on Programming Language Design and Implementation, Portland, OR, USA, June 15–…
Parallel programming models for heterogeneous many-cores: a comprehensive survey | J Fang, C Huang, T Tang, Z Wang - CCF Transactions on High …, 2020 - Springer | … The Brook language is an extension to the standard ANSI C and is designed to incorporate  the idea of data parallel computing and … The CUDA programming model works with  programming languages such as C, C++, and Fortran. A CUDA program calls parallel kernels, …
A Survey on Parallel Architectures and Programming Models | B Pervan, J Knezović - 2020 43rd International Convention on …, 2020 - ieeexplore.ieee.org | … Also, most of the algorithms developed in computer science are designed for single …  extensions to the existing programming languages or completely novel programming languages.  1) … gramming for modern architectures,” in Proceedings of the 12th ACM SIGPLAN symposium …
An existential crisis resolved: type inference for first-class existential types | RA Eisenberg, G Duboc, S Weirich, D Lee - … Programming Languages, 2021 - dl.acm.org | An existential crisis resolved: type inference for first-class existential types | Proceedings of  the ACM on Programming Languages ACM … in terms, along with an explicitly typed, type-safe  core language usable as a compilation target. This approach is backward compatible. The …
On the Effectiveness of Higher-Order Logic Programming in Language-Oriented Programming | M Cimini - … Symposium on Functional and Logic Programming, 2020 - Springer | … programming language \(\lambda \)Prolog. In this paper, we describe our compilation methods,  which highlight how the distinctive features of higher-order logic programming are a great fit  in implementing a language-oriented programming language… in programming languages, …
Exploring Affine Abstractions for Qubit Mapping | B Gerard, M Kong - … IEEE/ACM Second International Workshop …, 2021 - ieeexplore.ieee.org | … Using these abstractions, we design a layered approach consisting of four major steps.  First, it decomposes the qubit index space into disjoint sets by attempting to maximize the  sharing potential among circuit statements. Second, representable properties of each slice are …
Tea: A high-level language and runtime system for automating statistical analysis | E Jun, M Daum, J Roesch, S Chasins… - … the 32nd Annual ACM …, 2019 - dl.acm.org | … We have designed Tea to integrate directly into common data analysis workflows for users  who have minimal programming experience. Tea is … This paper introduces Tea, a high-level  programming language that supports users in formalizing and automating statistical analysis. …
Ethainter: A smart contract security analyzer for composite vulnerabilities | L Brent, N Grech, S Lagouvardos, B Scholz… - … SIGPLAN Conference …, 2020 - dl.acm.org | … In Proceedings of the 41st ACM SIGPLAN International Conference on Programming  Language Design and Implementation (PLDI ’20), June 15ś20, 2020, London, UK. … The  key tenet is to abstract away from the complexity of language elements keeping the focus on …
Survey on application programming interfaces in software defined networks and network function virtualization | SMH Krishna, R Sharma - Global Transitions Proceedings, 2021 - Elsevier | … There are existing NBIs and as well as programming languages NBIs. The northbound … for  high-level languages in SDN or there are some dedicated languages especially designed for  a … natural language and controller is designed to integrate core services with its functionality. …
Common Language: Business Programming Languages and the Legibility of Programming | B Allen - IEEE Annals of the History of Computing, 2018 - ieeexplore.ieee.org | … programming language design itself as a tool for persuasion. The focus will be the design  of the early English-like business programming languages, the … As she would explain at the  1978 ACM SIGPLAN History of Programming Languages conference (henceforth HOPL-1):4 …
Compile-Time Library Call Detection Using CAASCADE and XALT | J Zhao, OR Hernandez, RD Budiardja… - International Conference …, 2018 - Springer | … —is a tool that summarizes the use of parallel programming language features in application  source code using compiler technology. This … analyzer within Apache Spark [2] which is a  scalable data processing framework that is designed to run on distributed parallel systems. …
Mitigating JIT compilation latency in virtual execution environments | M Kristien, T Spink, H Wagstaff, B Franke… - … the 15th ACM SIGPLAN …, 2019 - dl.acm.org | Many Virtual Execution Environments (VEEs) rely on Just-in-time (JIT) compilation technology  for code generation at runtime, eg in Dynamic Binary Translation (DBT) systems or language  Virtual Machines (VMs). While JIT compilation improves native execution performance as …
How automated feedback is delivered matters: Formative feedback and knowledge transfer | Q Hao, M Tsikerdekis - … IEEE Frontiers in Education Conference …, 2019 - ieeexplore.ieee.org | … A microservice of automated formative feedback was designed and implemented. The  automated feedback was set up to address correctness and coding style along a series of  milestones in finishing each of the assigned programming projects. 36 students participated in this …
Full-stack, real-system quantum computer studies: Architectural comparisons and design insights | P Murali, NM Linke, M Martonosi… - … on Computer …, 2019 - ieeexplore.ieee.org | … design questions about gate set choices, communication topology, the factors affecting  benchmark performance and compiler optimizations. In order to answer key cross-technology  and cross-platform design … to inform both QC device and compiler design going forward. …
Enhanced compiler bug isolation via memoized search | J Chen, H Ma, L Zhang - … of the 35th IEEE/ACM International Conference …, 2020 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored.  Abstracting with credit is permitted. To copy otherwise, or republish, to … In Proceedings of the  32nd ACM SIGPLAN conference on Programming language design and implementation. 283–294. …
A verification framework for spatio-temporal consistency language with CCSL as a specification language | Y Zhang, F Mallet, Y Chen - Frontiers of Computer Science, 2020 - Springer | … The Spatio-Temporal Consistency Language (STeC) is a high-level modeling language that  deals natively with spatio-temporal behaviour, … We propose a theory combining these two  languages and a method verifying CCSL properties in STeC models. We adopt UPPAAL as the …
Evaluating a game-development approach to teach introductory programming concepts in secondary education | S Papadakis - International Journal of Technology …, 2020 - inderscienceonline.com | … It used a quasi-experimental control group design. The results of the study showed that  the combined use of App Inventor … estimation’, Proceedings of the 3rd ACM SIGPLAN  workshop on Evaluation and usability of programming languages and tools, ACM, pp.15–24. …
GaussED: A Probabilistic Programming Language for Sequential Experimental Design | MA Fisher, O Teymur, C Oates - arXiv preprint arXiv:2110.08072, 2021 - arxiv.org | … Abstract Sequential algorithms are popular for experimental design, enabling emulation,  optimisation and inference to be efficiently … probabilistic programming language coupled to a  powerful experimental design engine, which together automate sequential experimental design …
Toward efficient gradual typing for structural types via coercions | A Kuhlenschmidt, D Almahallawi, JG Siek - … ACM SIGPLAN Conference …, 2019 - dl.acm.org | … First, there is a large language design space: choices regarding the semantics of a gradually  typed language have significant impacts on efficiency. Second, there is the … To put these  results in context we make comparisons to other programming language implementations. …
An implementation of flow calculus for complexity analysis (tool paper) | C Aubert, T Rubiano, N Rusch, T Seiller - arXiv preprint arXiv:2107.00097, 2021 - arxiv.org | … programming language, that they described as “very rudimentary”, and our first task was  to map their language to an actual programming language… SPEED [8] and Costa [2] are  similarly designed for different programming languages. CerCo project aimed at building a C …
Parallel shadow execution to accelerate the debugging of numerical errors | S Chowdhary, S Nagarakatte - … of the 29th ACM Joint Meeting on …, 2021 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored.  Abstracting with credit is permitted. To copy otherwise… In Proceedings of the 33rd ACM SIGPLAN  Conference on Programming Language Design and Implementation (Beijing, China) (PLDI ’12)…
Functional baby talk: analysis of code fragments from novice haskell programmers | J Singer, B Archibald - arXiv preprint arXiv:1805.05126, 2018 - arxiv.org | … Once we know the key issues, we can engage with stakeholders such as educators, tool  implementers and language designers, to … Functional Reactive Programming for GUIs. In:  Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and …
SoFi: Reflection-Augmented Fuzzing for JavaScript Engines | X He, X Xie, Y Li, J Sun, F Li, W Zou, Y Liu… - … SIGSAC Conference …, 2021 - dl.acm.org | … JavaScript is a just-in-time compiled programming language with dynamic types. The type of  a variable can be different in different paths. … We evaluate the impact of the design choices  for diversity and validity with an ablation study. For this purpose, we modified SoFi to build …
Alligator collector: a latency-optimized garbage collector for functional programming languages | B Gamari, L Dietz - Proceedings of the 2020 ACM SIGPLAN International …, 2020 - dl.acm.org | … design, but, in the interest of simplicity, without the on-the-fly handshake. However, as our  design relies on moving, stop-the-world minor collection, in practice our design … We demonstrate  that even for the high allocation-rate mutators of functional programming languages, a …
How domain experts create conceptual diagrams and implications for tool design | D Ma'ayan, W Ni, K Ye, C Kulkarni… - … the 2020 CHI Conference …, 2020 - dl.acm.org | … tools by their dominant mode of interaction: programminglanguage based (PL) tools and  direct manipulation (DM) tools. We use PL tools to refer to text-based diagramming tools, including  imperative or declarative programming languages, libraries, frameworks, and embedded …
Deep differential testing of JVM implementations | Y Chen, T Su, Z Su - … IEEE/ACM 41st International Conference …, 2019 - ieeexplore.ieee.org | … Additional program constructs, such as methods and call chains, would need to be carefully  designed for the mutated constructs to be … To capture this intuition, we choose methods  with probabilities meeting a geometric distribution that allows methods with higher potentials …
Java typestate checker | J Mota, M Giunti, A Ravara - … Conference on Coordination Languages and …, 2021 - Springer | … In programming languages, some common errors are detected thanks to type systems  implemented in type checkers [8]. Unfortunately, the … Fugue [10] integrates typestates [15]  with an object-oriented programming language, allowing the programmer to add declarative …
From programs to interpretable deep models and back | E Yahav - International Conference on Computer Aided …, 2018 - Springer | … We describe a general path-based representation of source code that can be used across  programming languages and … Designing a program representation that enables effective  learning is a critical task that is often done manually for each task and programming language…
Development of Web-based Visual Compiler for Computer Literacy | H Hiranishi, PPYIT Hattori - The 6th International Conference on …, 2020 - researchgate.net | … of language processing and behavior of compiler from high-level programming language  such as C into machine language (in our case, pseudo assembly language). … This section  describes design objective of our visual compiler, shows its user interface and illustrates multiple …
Hypothesis: A new approach to property-based testing | DR MacIver, Z Hatfield-Dodds - Journal of Open Source Software, 2019 - joss.theoj.org | Property-based testing is a style of testing popularised by the QuickCheck family of libraries,  first in Haskell (Claessen & Hughes, 2000) and later in Erlang (Arts, Hughes, Johansson, &  Wiger, 2006), which integrates generated test cases into existing software testing workflows: …
On the use of formal methods to model and verify neuronal archetypes | E De Maria, A Bahrami, T l'Yvonnet, A Felty… - Frontiers of Computer …, 2022 - Springer | … The first approach exploits the synchronous programming language Lustre to encode  archetypes and their couplings, and to express properties concerning their dynamic behavior.  These properties are verified thanks to the use of model checkers. The second approach relies …
HipHop. js:(A) Synchronous reactive web programming | G Berry, M Serrano - … SIGPLAN Conference on Programming Language …, 2020 - dl.acm.org | … In the sequel, we focus on the HipHop.js’s language design, the programming style it offers,  and its tight integration with … language on-the-fly and explaining of how it modularizes and  simplifies temporal programming; we complete the login implementation by the Hop.js coding …
Bayesian causal inference via probabilistic program synthesis | S Witty, A Lew, D Jensen, V Mansinghka - arXiv preprint arXiv:1910.14124, 2019 - arxiv.org | … probabilistic programming language. Priors are represented using probabilistic programs  that generate source code in a domain specific language. … causal models explaining some  phenomenon as programs in MiniStan, a simple probabilistic programming language designed …
Interactive Verification of Distributed Protocols Using Decidable Logic | S Shoham - International Static Analysis Symposium, 2018 - Springer | … In: Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design  and Implementation, PLDI 2018, Philadelphia, … In: Proceedings of the 36th ACM SIGPLAN  Conference on Programming Language Design and Implementation, Portland, OR, USA, 15–…
Synthesizing object state transformers for dynamic software updates | Z Zhao, Y Jiang, C Xu, T Gu… - … International Conference …, 2021 - ieeexplore.ieee.org | … explains our design goals and choices in our domain-specific language (DSL) for describing  object transformers. The DSL design and … We argue that this is not likely the case because:  (1) the design of PASTA follows the general principles of software systems, and (2) the …
Studying the difference between natural and programming language corpora | C Casalnuovo, K Sagae, P Devanbu - Empirical Software Engineering, 2019 - Springer | … on the differences between natural language and code have typically aimed at exploring  one programming language and one natural language (Hindle et al. ; Tu et al. ). … design  and CS education has touched on the difficulty between programming languages for novices. …
A relational static semantics for call graph construction | X Zhuo, C Zhang - International Conference on Formal Engineering …, 2019 - Springer | … , which is designed in the same spirit as Featherweight Java [11]. A program is defined as a  … and C++, which may differ in specific language designs. We define a few auxiliary functions.  … In: Proceedings of the ACM SIGPLAN 2003 Conference on Programming Language Design …
Coset: A benchmark for evaluating neural program embeddings | K Wang, M Christodorescu - arXiv preprint arXiv:1905.11445, 2019 - arxiv.org | … Search, align, and repair: Data-driven feedback generation for introductory programming  exercises. In Proceedings of the 39th ACM SIGPLAN Conference on Programming Language  Design and Implementation, PLDI 2018, pages 481–495, New York, NY, USA, 2018. ACM. …
Exploring software naturalness through neural language models | L Buratti, S Pujar, M Bornea, S McCarley… - arXiv preprint arXiv …, 2020 - arxiv.org | … hypothesis argues that programming languages can be understood through the same  techniques used in natural language processing. We … To generate the gold data for our AST  node tagging task we used Clang [48], an open-source C/C++ compiler with a modular design. …
Using large-scale anomaly detection on code to improve kotlin compiler | T Bryksin, V Petukhov, I Alexin, S Prikhodko… - … Conference on Mining …, 2020 - dl.acm.org | … Moreover, anomalies could correspond to problems in language design. For this study,  we choose Kotlin as the target programming language. We outline and discuss approaches  to obtaining vector representations of source code and bytecode and to the detection of …
Convivial design heuristics for software systems | S Kell - … on Art, Science, and Engineering of Programming, 2020 - dl.acm.org | … design of most user-facing computer systems, and especially in the design of programming  … In this paper I survey some tentative design principles, extracted from examples of research  … In Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design …
A power-aware heterogeneous architecture scaling model for energy-harvesting computers | H Desai, B Lucia - IEEE Computer Architecture Letters, 2020 - ieeexplore.ieee.org | … Lucia, “Transactional concurrency control for intermittent, energy-harvesting computing  systems,” in Proceedings of the 40th ACM SIGPLAN Conference on Programming Language  Design and Implementation, PLDI 2019, (New York, NY, USA), pp. 1085–1100, ACM, 2019. …
Size-change termination as a contract: dynamically and statically enforcing termination for higher-order programs | PC Nguyễn, T Gilray, S Tobin-Hochstadt… - … Programming Language …, 2019 - dl.acm.org | … A run-time error is one resulting from misuse of language constructs as standard in a  programming language (eg applying a primitive to … We implement the semantics presented  in Section 3 as a library in the Racket programming language through instrumentation of the …
LLHD: A multi-level intermediate representation for hardware description languages | F Schuiki, A Kurth, T Grosser, L Benini - … Programming Language Design …, 2020 - dl.acm.org | … a design in the same way as the simulator used for verification, and the standards can be  very subtle [26]. As a consequence, designers resort to a łsafe subset” of each language … -programming  layer to be added, which in our opinion is best left to a higher-level language or IR. …
Automatic grading of programming assignments: an approach based on formal semantics | X Liu, S Wang, P Wang, D Wu - … 41st International Conference …, 2019 - ieeexplore.ieee.org | … We have designed our method to find the inputs that will cause two programs to behave  differently, by having either different output states or semantically … DESIGN In this section,  we present the design of AUTOGRADER. The workflow of AUTOGRADER is shown in Fig. 2. …
Verified translation between purely functional and imperative domain specific languages in HELIX | V Zaliva, I Zaichuk, F Franchetti - Software Verification, 2020 - Springer | … intermediate representation language between MHCOL and LLVM IR. It is not meant to be a  general-purpose programming language and contains … There are also many smaller but  useful language design and proof techniques not covered in this paper due to space constraints. …
SyRust: automatic testing of Rust libraries with semantic-aware program synthesis | Y Takashima, R Martins, L Jia… - … Programming Language …, 2021 - dl.acm.org | … In Proceedings of the 42nd ACM SIGPLAN International Conference on Programming  Language Design and Implementation (PLDI ’21), June 20ś25, 2021, Virtual, Canada. ACM,  New York, NY, USA, 15 pages. https://doi.org/ 10.1145/3453483.3454084 …
Scalability-first pointer analysis with self-tuning context-sensitivity | Y Li, T Tan, A Møller, Y Smaragdakis - … the 2018 26th ACM Joint Meeting …, 2018 - dl.acm.org | … In ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI  ’14, … ACM SIGPLAN Conference on Programming Language Design and Implementation,  PLDI 2009, Dublin, Ireland, June 15-21, 2009, Michael Hind and Amer Diwan (Eds.). ACM, …
Safe stream-based programming with refinement types | B Stein, L Clapp, M Sridharan… - … International Conference …, 2018 - ieeexplore.ieee.org | … The choice of default annotations is a design choice; in practice, we find that these defaults  largely correspond to developer intuitions and reduce … results presented in this section are  predicated upon the correctness and soundness of our technique and experimental design. …
The next 700 semantics: a research challenge | S Krishnamurthi, S Benjamin - … on Advances in Programming Languages, 2019 - par.nsf.gov | … (Strictly speaking, this term is slightly misleading, since the core language λP might be a  different language rather than a subset of P itself; nevertheless, this term captures our  design intent better … In ACM SIGPLAN Conference on …
Efficient scalable thread-safety-violation detection: finding thousands of concurrency bugs during testing | G Li, S Lu, M Musuvathi, S Nath, R Padhye - … of the 27th ACM …, 2019 - dl.acm.org | … This section describes the design of TSVD along with its variants that represent alternative  designs and will be used to compare with … Next, we present the variants that take different  design points in the design space in Figure 2. We start with two simple variants that occupy the …
Functional programming with λ-tree syntax: Draft | U Gérard, D Miller - 2018 - lix.polytechnique.fr | … We present the design of a new functional programming language, MLTS, that uses the λ-tree  syntax approach to encoding bindings that appear within data structures. In this setting,  bindings never become free nor escape their scope: instead, binders in data structures are …
IDE as Code: Reifying Language Protocols as First-Class Citizens | P Jeanjean, B Combemale, O Barais - … Conference (formerly known as …, 2021 - dl.acm.org | … programming languages in the large, including both general-purpose and domain-specific  languages, we need to account for an ever-growing number of language … Domain-specific  language designers need to provide services to support specific language capabilities. The …
Mining rule violations in javascript code snippets | UF Campos, G Smethurst, JP Moraes… - … Conference on …, 2019 - ieeexplore.ieee.org | … : first, it is the de facto programming language for the web; second, it is the programming  language with the highest number of questions … Our rationale is that accepted answers to  JavaScript questions on STACKOVERFLOW might have been thoroughly designed and revised; …
How Are Performance Issues Caused and Resolved?-An Empirical Study from a Design Perspective | Y Zhao, L Xiao, X Wang, L Sun, B Chen, Y Liu… - … Conference on …, 2020 - dl.acm.org | … 4) This paper contributes a new design structure modeling technique for analyzing design-level  optimization, named Diff-Design Structure … Lastly, we acknowledge that different programming  languages can impact the presented results. The issues studied in this work are mostly …
Becker, BA (2019). Parlez-vous java? bonjour la monde!= hello world: Barriers to programming language acquisition for non-native english speakers. In 30th … | BA Becker - brettbecker.com | … programming languages designed by humans did not share characteristics of the natural  languages used by the language designers (Naur, 1975). … This would not be surprising, as  programming languages were designed to be easily parsed by computational means and natural …
Inferring performance from code: a review | E Incerto, A Napolitano, M Tribastone - International Symposium on …, 2020 - Springer | … –2019, is mostly located in the sub-fields of computer science regarding programming  languages and software engineering. In addition to a brief … In: Proceedings of the 34th ACM  SIGPLAN Conference on Programming Language Design and Implementation, pp. 447–458 (2013)…
Vizir: A Domain-Specific Graphical Language for Authoring and Operating Airport Automations | S Conversy, J Garcia, G Buisan, M Cousy… - … of the 31st Annual ACM …, 2018 - dl.acm.org | … While designing Vizir, we identified and refined a number of design principles. The principles  helped us fulfill the requirements … computer programs using a scripting language based on  blocks and containers. Kodu [54] is a visual programming tool to teach reactive programming …
Multi-modal end-user programming of web-based virtual assistant skills | MH Fischer, G Campagna, E Choi, MS Lam - arXiv preprint arXiv …, 2020 - arxiv.org | … These skills are represented in a formal programming language we designed called …  programming language with well-defined semantics as a target language. Thus we ask the  question: How do we improve the expressiveness of the virtual assistant programming language to …
Perses: Syntax-guided program reduction | C Sun, Y Li, Q Zhang, T Gu, Z Su - … of the 40th International Conference …, 2018 - dl.acm.org | … Our conceptual insight is to utilize the formal syntax (ie, grammar) of a programming language  to guide reduction. Our technical insight is to leverage the grammar to (1) generate only …  We also design an algorithm to automatically convert any grammar into its equivalent PNF. …
Matching mu-Logic: Foundation of K Framework | X Chen, G Rosu - 8th Conference on Algebra and Coalgebra in …, 2019 - drops.dagstuhl.de | … K framework is an effort in realizing the ideal language framework where programming  languages must have formal semantics and all languages tools are automatically generated  from the formal semantics in a correct-by-construction manner at no additional costs. In this …
Post-literate Programming: Linking Discussion and Code in Software Development Teams | S Park, AX Zhang, DR Karger - The 31st Annual ACM Symposium on …, 2018 - dl.acm.org | … As a future work, we will design an emergent summarization tool to ease the  summarization task [18]. … In Companion to the 21st ACM SIGPLAN symposium on Object-oriented  programming systems, languages, and applications. ACM, 681–682. …
Compile-Time Library Call Detection Using CAASCADE and XALT | MG Lopez, V Sarkar, JC Wells - High Performance Computing …, 2019 - books.google.com | … —is a tool that summarizes the use of parallel programming language features in application  source code using compiler technology. This … of the ACM SIGPLAN 1988 Conference on  Programming Language Design and Implementation, PLDI 1988, pp. 35–46. ACM, New York (…
Fifty years of the psychology of programming | AF Blackwell, M Petre, L Church - … Journal of Human-Computer Studies, 2019 - Elsevier | … of programming from a human perspective has been the Psychology of Programming Interest  Group. While the field of programming language design … the field, more human-centric  contributions to programming language research offer a moderating influence supporting cultural …
Making programming accessible to learners with visual impairments: A literature review | A Hadwen-Bennett, S Sentance… - … Journal of Computer …, 2018 - ijcses.org | … accessible programming environment Sodbeans, along with the Hop programming language,  … an auditory debugger for the Hop programming language. The findings from the evaluation  … a language that is specially designed for VI learners, or a general-purpose language with …
Verification of operating system monolithic kernels without extensions | E Novikov, I Zakharov - … Symposium on Leveraging Applications of Formal …, 2018 - Springer | … For these models we suggest using the C programming language with special expressions.  The most important such expressions are … of the 31st ACM SIGPLAN Conference on  Programming Language Design and Implementation, PLDI 2010, pp. 99–110. ACM, New York (…
Performance mutation testing: Hypothesis and open questions | AB Sánchez, P Delgado-Pérez, S Segura… - Information and …, 2018 - Elsevier | Performance bugs are common, costly, and elusive. Performance tests aim to detect  performance bugs by running the program with specific inputs and determining whether the  observed behaviour is acceptable. There not exist mechanisms, however, to assess the …
Gen: a general-purpose probabilistic programming system with programmable inference | MF Cusumano-Towner, FA Saad, AK Lew… - … programming language …, 2019 - dl.acm.org | … A key challenge is designing these abstractions so that they are flexible, fast, and easy to  use. … Just as dynamic language features can make it difficult to produce optimized machine  code in a traditional programming language setting, flexible modeling languages can make it …
Reactive probabilistic programming | G Baudart, L Mandel, E Atkinson, B Sherman… - … SIGPLAN Conference …, 2020 - dl.acm.org | … first synchronous probabilistic programming language. ProbZelus conservatively provides  the facilities of a synchronous language to write … We present the design and implementation  of the language. We propose a measure-theoretic semantics of probabilistic stream functions …
Analyzing students' perceptions to improve the design of an automated assessment tool in online distributed programming | T Daradoumis, JMM Puig, M Arguedas, LC Liñan - Computers & Education, 2019 - Elsevier | … The aim of the analysis is to improve the design of the automated assessment tool. …  Designing an automated assessment tool in online distributed programming can provide students  with a meaningful distributed learning environment that improves their academic performance. …
Enabling High-Level Programming Languages on IoT Devices | T Severin, I Culic, A Radovici - … 19th RoEduNet Conference …, 2020 - ieeexplore.ieee.org | … programming language to be used for building Internet of Things applications. D is an  accessible and widely used programming language, which is not currently designed … The end  goal is to provide the developers community with a new programming language designed for fast …
A Term-Rewriting Semantics for Imperative Style Programming: Summary | DA Plaisted, L Barnett - … on Symbolic Computation in Software Science …, 2021 - risc.jku.at | … We define a term-rewriting based abstract programming language with an imperative style  and a precise semantics allowing programs to be translated … The system presented in this  paper is designed to make this possible and is maximally accessible to the typical programmer. …
OpenCGRA: Democratizing Coarse-Grained Reconfigurable Arrays | C Tan, NB Agostini, J Zhang, M Minutoli… - … Conference on …, 2021 - ieeexplore.ieee.org | … domain requires the exploration in a large design space (eg, applying appropriate loop …  -design framework* to automatically specialize and implement optimal CGRA designs given …  design has significant implications on the programming abstractions and languages and …
NNV: The neural network verification tool for deep neural networks and learning-enabled cyber-physical systems | HD Tran, X Yang, DM Lopez, P Musau… - International Conference …, 2020 - Springer | … NNV is an object-oriented toolbox written in Matlab, which was chosen in part due to the  prevalence of Matlab/Simulink in the design of … In: Proceedings of the 40th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2019, pp. 731–744. …
Integration verification across software and hardware for a simple embedded system | A Erbsen, S Gruetter, J Choi, C Wood… - … Programming Language …, 2021 - dl.acm.org | … Section 4 introduces our application programming language and the style of semantics  used throughout the system. In section 5, we describe the layers of our stack, the interfaces  between them, and our verification that they adhere to these interfaces, culminating in the …
Bringing Effortless Refinement of Data Layouts to Cogent | L O'Connor, Z Chen, P Susarla, C Rizkallah… - … Applications of Formal …, 2018 - Springer | … In this paper, we outline our design for a data description language and data refinement  framework, called Dargent, which provides the programmer … In: Proceedings of the 2005 ACM  SIGPLAN Conference on Programming Language Design and Implementation, pp. 295–304. …
Effective program debloating via reinforcement learning | K Heo, W Lee, P Pashakhanloo, M Naik - … Conference on Computer and …, 2018 - dl.acm.org | … of the targeted programming language and specification since the models are learned from  … Our algorithm is agnostic of the targeted programming language and specification. • We …  In Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design …
Compiler Infrastructure for Specializing Domain-Specific Memory Templates | S Soldavini, C Pilato - arXiv preprint arXiv:2104.01448, 2021 - arxiv.org | … For this, our approach is based on the idea of platform-based design [17], where the memory  template is refined in different stages, starting … Our approach borrows idea from platform-based  design, trading off flexibility and specialization based on specific needs of the designers. …
Program Synthesis Using Deduction-Guided Reinforcement Learning | Y Chen, C Wang, O Bastani, I Dillig, Y Feng - … Conference on Computer …, 2020 - Springer | … A lightweight symbolic virtual machine for solver-aided host languages. In: ACM  SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2014,  Edinburgh, United Kingdom, 09–11 June 2014, pp. 530–541 (2014)Google Scholar …
A large-scale benchmark for few-shot program induction and synthesis | F Alet, J Lopez-Contreras, J Koppel… - … Conference on …, 2021 - proceedings.mlr.press | … We analyze the effect of multiple design choices on transformer-based program induction  and synthesis algorithms, pointing to shortcom… Programming language theorists have  defined many notions of program equivalence. A classic one, sometimes called “semantic …
Language-agnostic representation learning of source code from structure and context | D Zügner, T Kirschstein, M Catasta, J Leskovec… - arXiv preprint arXiv …, 2021 - arxiv.org | … monolingual code summarization on all five programming languages considered in this work,  … from multiple programming languages improves results on all individual languages, where  … In Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design …
Verified compilation on a verified processor | A Lööw, R Kumar, YK Tan, MO Myreen… - … SIGPLAN Conference …, 2019 - dl.acm.org | … Developing technology for building verified stacks, ie, computer systems with comprehensive  proofs of correctness, is one way the science of programming languages furthers the  computing discipline. While there have been successful projects verifying complex, realistic …
Understanding Execution Environment of File-Manipulation Scripts by Extracting Pre-Conditions | R Rodriguez, X Wang - computer.org | … To remove such extra path separators, we design the following two finite state transducers  as shown in Figures 4 and 5. … verification tool for puppet,” in Proceedings of the 37th  ACM SIGPLAN Conference on Programming Language Design and Implementation, …
From LCF to isabelle/hol | LC Paulson, T Nipkow, M Wenzel - Formal Aspects of Computing, 2019 - Springer | … Goguen, JA: Some design principles and theory for OBJ-O, a language to express and  execute … ACM SIGPLAN-SIGACT symposium on principles of programming languages, POPL  '14. … In: Avigad J, Chlipala A (eds) 5th ACM SIGPLAN conference on certified programs and …
Generalized data structure synthesis | C Loncaric, MD Ernst, E Torlak - … of the 40th International Conference on …, 2018 - dl.acm.org | … We already understood the Cozy specification language (Section 3.1), but we believe that  a programmer could learn it more quickly than it took us to reverse-engineer any one of the  programs. Because the specifications are shorter, simpler, and more abstract, they are much …
OmpMemOpt: Optimized Memory Movement for Heterogeneous Computing | P Barua, J Zhao, V Sarkar - European Conference on Parallel Processing, 2020 - Springer | … We design an intermediate representation to express the memory model of the programming  paradigm and develop an analysis based on … Proceedings of the 32nd ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2011, San Jose, CA, …
Teachers' Views and Experiences on Teaching Second and Subsequent Programming Languages | E Tshukudu, Q Cutts, O Goletti, A Swidan… - … 17th ACM Conference …, 2021 - dl.acm.org | … We believe that instruction can be designed to promote the transfer of learning. … In order  to answer RQ1 on teachers’ motivation to teach a second programming language, we asked  them to justify their choice of programming languages and the learning outcomes they were …
Learning to optimize tensor programs | T Chen, L Zheng, E Yan, Z Jiang, T Moreau… - arXiv preprint arXiv …, 2018 - arxiv.org | … Futhark: Purely functional gpu-programming with nested parallelism and in-place array  updates. In Proceedings of the 38th ACM SIGPLAN Conference on Programming Language  Design and Implementation, PLDI 2017, pages 556–571, New York, NY, USA, 2017. ACM. …
The first twenty years of agent-based software development with JADE | F Bergenti, G Caire, S Monica, A Poggi - Autonomous Agents and Multi …, 2020 - Springer | … Jadescript originates from the choice of removing all references to Xtend from JADEL, and  to replace them with syntactic constructs explicitly designed for the purpose. The result is that  Jadescript shares some characteristics with popular scripting languages, like semantically-…
FlashRegex: deducing anti-ReDoS regexes from examples | Y Li, Z Xu, J Cao, H Chen, T Ge… - … Conference on …, 2020 - ieeexplore.ieee.org | … Regular expressions (regexes) are widely used in different fields of computer science such  as programming languages, string processing and databases. However, existing tools for  synthesizing or repairing regexes were not designed to be resilient to Regex Denial of Service (…
E-Move: Domain Specific Language for People with Movement Disorders | R Valencia-Ramos, L Zhinin-Vera, O Chang… - Conference on …, 2020 - Springer | … the E-Move programming language as an alternative for people who struggle in their  interaction with programming languages due to their … In this section, we provide a brief overview  of the tools used to design and implement the E-Move programming language. These tools are …
Improving neural network verification through spurious region guided refinement | P Yang, R Li, J Li, CC Huang, J Wang… - Tools and Algorithms …, 2021 - ncbi.nlm.nih.gov | … Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and  Implementation, PLDI 2019, Phoenix, AZ, … Proceedings of the 44th ACM SIGPLAN Symposium  on Principles of Programming Languages, POPL 2017, Paris, France, January 18-20, …
Human-Centric Program Synthesis | W Crichton - arXiv preprint arXiv:1909.12281, 2019 - arxiv.org | … I sketch a human-centric vision for program synthesis where programmers explore and learn  languages … Readability metrics can be informed by existing principles of programming notation  design, like the … Can API or language designers make their systems more amenable to …
On the principles of differentiable quantum programming languages | S Zhu, SH Hung, S Chakrabarti, X Wu - … Programming Language Design …, 2020 - dl.acm.org | … The correctness of the code transformation of composition critically relies on our design choice  … In Section 4, we illustrate our design of additive quantum programs. Specifically, we add the  … In Section 7, we conduct a resource analysis to further justify our design. We show that the …
A robust and efficient defense against use-after-free exploits via concurrent pointer sweeping | D Liu, M Zhang, H Wang - … 2018 ACM SIGSAC Conference on Computer …, 2018 - dl.acm.org | Applications in C/C++ are notoriously prone to memory corruptions. With significant research  efforts devoted to this area of study, the security threats posed by previously popular  vulnerabilities, such as stack and heap overflows, are not as serious as before. Instead, we have …
TASO: optimizing deep learning computation with automatic generation of graph substitutions | Z Jia, O Padon, J Thomas, T Warszawski… - … of the 27th ACM …, 2019 - dl.acm.org | … NasNet-A and NasRNN exceed the best human-designed DNN architectures for image  classification and language modeling tasks, respectively. Finally, BERT [15] is a new language  representation architecture that obtained the state-of-the-art model accuracy on a spectrum of …
Enhancing web app execution with automated reengineering | K An - Companion Proceedings of the Web Conference 2020, 2020 - dl.acm.org | … First, in distributed web apps, written in scripting languages, it is often hard to precisely  determine all the dependent code of a remote functionality. … In Proceedings of the 40th ACM  SIGPLAN Conference on Programming Language Design and Implementation. ACM, 269–285. …
Pipelining bottom-up data flow analysis | Q Shi, C Zhang - … of the ACM/IEEE 42nd International Conference on …, 2020 - dl.acm.org | … As a result, we can achieve much higher parallelism than the conventional parallel design of  bottom-up analysis. Our key insight is that many analysis tasks of a caller function only depend  on partial analysis results of its callee functions. Thus, the analysis of the caller function …
Solved and Open Problems in Type Error Diagnosis. | J Hage - STAF Workshops, 2020 - ceur-ws.org | … Certainly, we do not expect in any programming language that the programmer annotates  every single part of his/her program with types, … Much more speculatively, optimising analyses  for functional languages are often designed as annotated type systems [34]. Examples are …
Securing smart contract with runtime validation | A Li, JA Choi, F Long - … Conference on Programming Language Design …, 2020 - dl.acm.org | … The design of Solythesis is driven by our observation that the storage layer is the secondary  … We therefore design the instrumentation algorithm of Solythesis to minimize the number of  … rations on new languages, new analyses, and new virtual machine designs that can further …
Multi-Purpose Syntax Definition with SDF3 | LE de Souza Amorim, E Visser - … Conference on Software Engineering and …, 2020 - Springer | … The goals of the design of SDF3 are (1) to support the definition of the concrete and abstract  syntax of formal languages (with an emphasis on programming languages), (2) to support  declarative syntax definition so that there is no need to understand parsing algorithms in order …
Memory and resource leak defects and their repairs in Java projects | M Ghanavati, D Costa, J Seboek, D Lo… - Empirical Software …, 2020 - Springer | … Programming languages provide support for programmers to prevent occurrences of leak-inducing  defects. For instance, Java 7 introduces a new language … In: Proceedings of the 2007  ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI ’…
Typilus: Neural type hints | M Allamanis, ET Barr, S Ducousso, Z Gao - … conference on programming …, 2020 - dl.acm.org | Type inference over partial contexts in dynamically typed languages is challenging. In this  work, we present a graph neural network model that predicts types by probabilistically  reasoning over a program’s structure, names, and patterns. The network uses deep similarity …
Boa meets python: A boa dataset of data science software in python language | S Biswas, MJ Islam, Y Huang… - … International Conference …, 2019 - ieeexplore.ieee.org | … Abstract—The popularity of Python programming language has surged in recent years due  to its increasing usage in Data Science. The … Mining such Python projects would be helpful  to improve language design, library enhancements, bug detection as well as open new …
Type-Directed Program Synthesis and Constraint Generation for Library Portability | B Collie, P Ginsbach… - … International Conference …, 2019 - ieeexplore.ieee.org | … We define a simple language of annotations (in the spirit of a minimal logic programming  language) that can be used by library vendors to … In this specific example, the output is in  the IDL programming language [13] (GENERAL CONSTRAINTS in Figure 5). This results in a …
The next 700 accelerated layers: From mathematical expressions of network computation graphs to accelerated GPU kernels, automatically | N Vasilache, O Zinenko, T Theodoridis… - ACM Transactions on …, 2019 - dl.acm.org | … 1The “700 layers” is a reference to a seminal paper on programming languages by PJ  Landin: “The next 700 programming languages.” … We also design the domain language to  cover a variety of existing and emerging machine learning models. Our framework automates a …
Nv: An intermediate language for verification of network control planes | N Giannarakis, D Loehr, R Beckett… - … ACM SIGPLAN Conference …, 2020 - dl.acm.org | … The key difference between our simulator and these others is that they are designed to simulate  specific protocols (eg, BGP, OSPF, etc) where as our simulator simulates the NV programming  language. A standard interpreter implementation that treats NV structures as ordinary …
Program synthesis through reinforcement learning guided tree search | R Simmons-Edler, A Miltner, S Seung - arXiv preprint arXiv:1806.02932, 2018 - arxiv.org | … them, as well as programs containing other elements of modern programming languages  as the MDP representation of a process is Turing … In Proceedings of the 38th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2017. ACM, 2017. …
An empirical study of method chaining in java | T Nakamaru, T Matsunaga, T Yamazaki… - … Conference on Mining …, 2020 - dl.acm.org | … language features (or API design) that we discovered are helpful for encouraging the  method-chaining style in Java. Those features are supported in other languages … • We present  language features (or API design) that support method chaining but are not supported yet in Java. …
An empirical investigation into learning bug-fixing patches in the wild via neural machine translation | M Tufano, C Watson, G Bavota, M Di Penta… - … Conference on …, 2018 - dl.acm.org | … However, the learning process is language-independent and the whole infrastructure can  be instantiated for different programming languages by replacing the lexer, parser and AST  differencing tools. We only focused on small-sized methods. We reached this decision after …
Using language workbenches and domain-specific languages for safety-critical software development | M Voelter, B Kolb, K Birken, F Tomassetti, P Alff… - Software & Systems …, 2019 - Springer | … Typically, they execute models by code generation to programming language code. This can  lead to increased productivity … language designer has finished designing the language, and  the LWB reports no more errors, it is guaranteed that all programs written with that language …
Using polyhedral analysis to verify OpenMP applications are data race free | F Ye, M Schordan, C Liao, PH Lin… - 2018 IEEE/ACM 2nd …, 2018 - ieeexplore.ieee.org | … 15] was specifically designed for systematic evaluation of data race detection tools with a focus  on the OpenMP parallel programming model. … Due to its design of mapping the constructs  of different parallel programming languages to a common intermediate representation, CIVL …
FuncyTuner: Auto-tuning Scientific Applications With Per-loop Compilation | T Wang, N Jain, D Beckingsale, D Boehme… - … Conference on Parallel …, 2019 - dl.acm.org | … To identify performance-critical flags for the bestCVs, we design an iterative greedy algorithm  to eliminate the flags that have low impact on … In Proceedings of the 31st ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI ’10). ACM, New York…
Automata modulo theories | L D'Antoni, M Veanes - Communications of the ACM, 2021 - dl.acm.org | … and automaton representations opens opportunities for redesigning the ways in which we  teach automata and design algorithms for them. … solvers14 have drastically changed the  world of programming languages and turned previously unsolvable problems into feasible ones. …
Mechanising and verifying the webassembly specification | C Watt - … of the 7th ACM SIGPLAN International Conference on …, 2018 - dl.acm.org | … Despite its original design as a high-level scripting language, … The designers of WebAssembly  have made it an explicit goal to specify the language in a way that makes it amenable to  formal analysis and verification. The draft specification [WebAssembly Community Group 2017f…
Stateful dataflow multigraphs: A data-centric model for performance portability on heterogeneous architectures | T Ben-Nun, J de Fine Licht, AN Ziogas… - … Conference for High …, 2019 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored.  Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to …  In ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI). …
High Performance is All about Minimizing Data Movement | M Hall - Proceedings of the 29th International Symposium on …, 2020 - dl.acm.org | High-performance applications running on current and future architectures are mostly  performance-limited by the cost of data movement, vertically through the memory hierarchy of  a node or between CPU host and accelerator, and horizontally across nodes. In this talk, we …
Pallene: A companion language for Lua | HM Gualandi, R Ierusalimschy - Science of Computer Programming, 2020 - Elsevier | … features when performance matters, we have decided to explore a return to the traditional  scripting architecture through Pallene, a system programming language that we have  designed specifically to complement Lua. Since Pallene has static types, it can obtain good …
Move: A language with programmable resources | S Blackshear, E Cheng, DL Dill, V Gao, B Maurer… - Libra Assoc, 2019 - bgp4.com | … We present Move, a safe and flexible programming language for the Libra Blockchain [1][2].  Move … In this paper, we present Move, a new programming language for implementing custom  transaction … of the ACM SIGPLAN international workshop on types in languages design and …
Finding Broken Linux Configuration Specifications by Statically Analyzing the Kconfig Language | J Oh, NF Yıldıran, J Braha, P Gazzillo - 2021 - paulgazzillo.com | … To demonstrate the utility of our approach, we design and implement an analysis that finds the  unmet dependency bugs highlighted in … the 33rd ACM SIGPLAN Conference on Programming  Language Design and Implementation (Beijing, China) (PLDI ’12). ACM, New York, …
Neural reverse engineering of stripped binaries | Y David, U Alon, E Yahav - 2019 - openreview.net | … However, all of these address high-level and syntactically rich programming languages such  as Java, C# and Python, and none of them address the unique challenges residing in … of  the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation, …
Formal Methods for GPGPU Programming: Is the Demand Met? | M Huisman - … Formal Methods: 16th International Conference …, 2020 - books.google.com | … In this paper, we consider mainly the CUDA and OpenCL programming languages. We  work with the CUDA terms, but give the … In: Proceedings of the 38th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2017, pp. 126–140. …
Rethinking Static Analysis by Combining Discrete and Continuous Reasoning | M Naik - International Static Analysis Symposium, 2019 - Springer | … static analysis in a constraint language that is amenable to computing provenance information.  We use the logic programming language Datalog as proof-of-… The overall process constitutes  a fundamental rethinking of how to design, implement, deploy, and adapt static analyses. …
WARDuino: a dynamic WebAssembly virtual machine for programming microcontrollers | R Gurdeep Singh, C Scholliers - … Conference on Managed Programming …, 2019 - dl.acm.org | … a low level programming language such as C which makes them hard to debug and maintain.  To raise the abstraction level, many high level programming languages have … the design  decisions made for WA are also very desirable when programming microcontrollers. While the …
Memory models for C/C++ programmers | M Pöter, JL Träff - arXiv preprint arXiv:1803.04432, 2018 - arxiv.org | … of the programming language implementation without … programming languages will be C  and C++ and programs execute threads concurrently. Our machine consists of CPU’s or cores  connected to a common, shared memory from which the cores (at the programming language …
Accelerating Program Analyses in Datalog by Merging Library Facts | Y Chen, C Yang, X Zhang, Y Xiong, H Tang… - International Static …, 2021 - Springer | … Datalog is a declarative logic programming language, which started for querying deductive  database. Recently, it has been widely used for … In: Proceedings of the 38th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2017, pp. 278–291. …
TinyCORP: A Calculus for Context-Oriented Reactive Programming | T Kamina, T Aotani - … of the Workshop on Context-oriented Programming, 2019 - dl.acm.org | … calculus for context-oriented reactive programming that is designed in a main-stream,  general-purpose language setting. This calculus is … propriate programming language abstractions  have been performed. Reactive programming (RP) makes data dependencies and reactive …
Detecting concurrency memory corruption vulnerabilities | Y Cai, B Zhu, R Meng, H Yun, L He, P Su… - … 27th ACM Joint Meeting …, 2019 - dl.acm.org | … Based on exchangeable events, we design three algorithms to detect three kinds of  concurrency vulnerabilities from correct executions. As relaxed … In Proceedings of the 31st  ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’10). …
Annotation-based static analysis for personal data protection | K Hjerppe, J Ruohonen, V Leppänen - IFIP International Summer School …, 2019 - Springer | … In addition to a brief review of the state-of-the-art of static analysis in the data protection  context and the design of the proposed analysis method, a concrete tool is presented to  demonstrate a practical implementation for the Java programming language. …
Is rust used safely by software developers? | AN Evans, B Campbell, ML Soffa - … International Conference on …, 2020 - ieeexplore.ieee.org | … Programming languages directly impact the reliability, safety, and correctness of software, and  their features impact the prevalence of bugs in actual software. A relatively new programming  language, Rust, is explicitly designed to help programmers … programming languages. …
Nvbit: A dynamic binary instrumentation framework for nvidia gpus | O Villa, M Stephenson, D Nellans… - … 52nd Annual IEEE/ACM …, 2019 - dl.acm.org | … Before describing NVBit’s design we briefly review NVIDIA’s GPU architecture and software  stack design, along with terminology that … In Proceedings of the ACM SIGPLAN Conference  on Programming Language Design and Implementation. 196–205. [36] Mark Stephenson, …
Mechanized Metatheory Revisited: An Extended Abstract | D Miller - 22nd International Conference on Types for Proofs and …, 2018 - drops.dagstuhl.de | … One possible approach to designing programming languages and proof assistants that  directly supports such an approach to bindings in syntax is presented. The roots of such an  approach can be found in the mobility of binders between term-level bindings, formula-level …
Central moment analysis for cost accumulators in probabilistic programs | D Wang, J Hoffmann, T Reps - … Conference on Programming Language …, 2021 - dl.acm.org | For probabilistic programs, it is usually not possible to automatically derive exact information  about their properties, such as the distribution of states at a given program point. Instead,  one can attempt to derive approximations, such as upper bounds on tail probabilities. Such …
PureMEM: a structured programming model for transiently powered computers | C Durmaz, KS Yildirim, G Kardas - Proceedings of the 34th ACM …, 2019 - dl.acm.org | … However, as compared to the structured programming languages such as C, existing task-based  programming models provide limited … of the sixteenth international conference on  Architectural support for programming languages and operating systems (ASPLOS XVI). ACM, …
Analysis of blockchain smart contracts: Techniques and insights | S Kim, S Ryu - 2020 IEEE Secure Development (SecDev), 2020 - ieeexplore.ieee.org | … of programming languages and lack of clear property definitions for vulnerabilities are two  other unsolved challenges. We propose that designing new languages or type systems is a  promising research direction, as linguistic … platforms and scripting languages seems promising, …
Automated migration of hierarchical data to relational tables using programming-by-example | N Yaghmazadeh, X Wang, I Dillig - Proceedings of the VLDB Endowment, 2018 - dl.acm.org | … Second, we design a DSL as the intermediate language which can express mappings  between hierarchical and relational formats. Finally, … of the 38th ACM SIGPLAN Conference on  Programming Language Design and Implementation, PLDI 2017, pages 422–436. ACM, 2017. …
A Hardware Co-design Workflow for Scientific Instruments at the Edge | K Yoshii, R Sankaran, S Strempfer, M Levental… - arXiv preprint arXiv …, 2021 - arxiv.org | … programming languages or models improve our productivity and support our innovations?  Which architectural techniques and design … To compensate for the weakness in recursive  generating capability, designers tend to use a general-purpose programming language, such as …
A didactic object-oriented, prototype-based visual programming environment | BG Perez-Schofield, F Ortin - Science of Computer Programming, 2019 - Elsevier | … -Oriented Interpreter), an interpreter of a very simple programming language designed for  lecturing the prototype-based model of the object-… designs as immediately as possible. We  selected Java [5] as the programming language of our choice in the light of these requisites. …
Fusion 360 gallery: A dataset and environment for programmatic cad construction from human design sequences | KDD Willis, Y Pu, J Luo, H Chu, T Du… - ACM Transactions on …, 2021 - dl.acm.org | … of a training set of 6,900 designs and a test set of 1,725 designs, and a set of evaluation criteria.  … We believe it is critical to understand not only what is designed, but how that design came  … In Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design …
Tools and techniques for teaching computer programming: A review | Kanika, S Chakraverty… - Journal of Educational …, 2020 - journals.sagepub.com | … Historically, many programming languages have been used to … of programming and the  syntax of the programming language while teaching the course. Alternatively, advanced courses  on computer programming discuss concepts such as object-oriented programming, design …
Semantic code search via equational reasoning | V Premtoon, J Koppel, A Solar-Lezama - … ACM SIGPLAN Conference on …, 2020 - dl.acm.org | We present a new approach to semantic code search based on equational reasoning, and the  Yogo tool implementing this approach. Our approach works by considering not only the  dataflow graph of a function, but also the dataflow graphs of all equivalent functions reachable …
Energy Efficiency Analysis of Compiler Optimizations on the SPEC CPU 2017 Benchmark Suite | N Schmitt, J Bucek, KD Lange, S Kounev - … International Conference on …, 2020 - dl.acm.org | … In contrast, we take a look at which factors, application domain, or programming language,  could be susceptible to compiler optimizations in … In Proceedings of the ACM SIGPLAN 2003  Conference on Programming Language Design and Implementation (PLDI ’03). ACM, New …
Ahead-of-time compilation in eclipse OMR on example of WebAssembly | G Krylov, P Jelenković, M Thom, GW Dueck… - … Conference on …, 2021 - dl.acm.org | … Eclipse OMR is a collection of reusable, robust components for constructing programming  language runtimes – the collection has a dynamic … This research uses the WebAssembly  runtime, wabtaot, specifically designed by us for evaluating the Eclipse OMR AOT compiler func…
On the Multi-Language Construction. | S Buro, I Mastroeni - ESOP, 2019 - iris.univr.it | … are conceived and designed in order to … languages has been a problem since the second  programming language was invented” [8], so it is hardly surprising that developers have  focused on the design of cross-language interoperability mechanisms, enabling programmers …
On-the-fly data race detection with the enhanced openmp series-parallel graph | N Boushehrinejadmoradi, A Yoga… - International Workshop on …, 2020 - Springer | … In: Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design  and Implementation, pp. 121–133 (2009)… In: Proceedings of the 33rd ACM SIGPLAN  Conference on Programming Language Design and Implementation, pp. 543–554. PLDI (2012)…
Semantic fuzzing with zest | R Padhye, C Lemieux, K Sen, M Papadakis… - … of the 28th ACM …, 2019 - dl.acm.org | … Here, we evaluate Zest in discovering semantic bugs, for which it is specifically designed. …  In Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design …  In Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design …
Cnerator: A Python application for the controlled stochastic generation of standard C source code | F Ortin, J Escalada - SoftwareX, 2021 - Elsevier | … the languages used to build those machine learning models is the C programming language…  There exist many different variants of the C programming language, which include language  … Therefore, they are not designed to build massive amounts of standard C code, and they do …
Fully automated compiler testing of a reasoning engine via mutated grammar fuzzing | Y Koroglu, F Wotawa - … IEEE/ACM 14th International Workshop …, 2019 - ieeexplore.ieee.org | … METHODOLOGY Our aim in this section is to design and implement a fully automated tool  for testing the ATMS compiler. In order to fully … Our aim in this part is to design an automated  test oracle that decides if the test is failed or passed. In our case, the test is passed only if the …
Phism: Polyhedral High-Level Synthesis in MLIR | R Zhao, J Cheng - arXiv preprint arXiv:2103.15103, 2021 - arxiv.org | … High-level synthesis (HLS) can transform software programs in Clike languages into  hardware designs, and polyhedral optimisation can … This paper focuses on Affine [18], which is  designed for representing polyhedral programs, and can be translated from C and optimised by …
Practical causality handling for synchronous languages | S Smyth, A Schulz-Rosengarten… - … in Europe Conference …, 2019 - ieeexplore.ieee.org | … means that there exists a schedule that obeys the rules put down by the language. In practice  it … language to also consider explicit scheduling directives that can be used by either the  modeler or model-to-model transformations. Secondly, we propose to enhance programming …
A language-independent approach to smart contract verification | X Chen, D Park, G Roşu - … on Leveraging Applications of Formal Methods, 2018 - Springer | … -based executable semantics framework for programming language design and development.  It can be regarded as a meta-programming language that defines programming languages.  As an example, consider the simple imperative language IMP whose syntax is given in Fig. …
Context-aware failure-oblivious computing as a means of preventing buffer overflows | M Rigger, D Pekarek, H Mössenböck - … Conference on Network and …, 2018 - Springer | … designed our approach to complement existing approaches for handling buffer overflows. Our  idea is that, for important functions, programmers … In: Proceedings of the 39th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2018, pp. 181–…
Efficient parallel determinacy race detection for two-dimensional dags | Y Xu, ITA Lee, K Agrawal - ACM SIGPLAN Notices, 2018 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored.  Abstracting with credit is permitted. To copy … -Order traversal to the language constructs provided  by Cilk-P [28, 29]. Cilk-P is an extension to the Cilk language that supports linear pipelines with …
Towards safe modular composition of network functions | M Eichholz, G Salvaneschi, M Mezini - … and Engineering of Programming, 2018 - dl.acm.org | … We plan to adapt programming language concepts like dynamic (multiple) dispatching to …  First, we want to design a solution where network functions are entirely decoupled from their …  In our language design, we want to develop suitable abstractions to describe where network …
Integrating technology in programming learning and instruction: a critical review | J Peng, B Yuan, JM Spector… - International Journal of …, 2019 - inderscienceonline.com | … From 1950s to 1990s, the development of programming languages grew so rapidly that  hundreds of procedural programming … -enhanced programming learning tools have also been  designed and applied in teaching and learning design skills of computer programming. The …
The future of the web | M Tyagi, M Sharma, P Sharma - … of the International Conference on …, 2020 - papers.ssrn.com | … As a result of this, web developers and designers will have to reconsider and rethink their  designing approach from the roots. … WebAssembly is now backed by all major browsers  including Google Chrome and has been rapidly adopted by a number of programming languages. …
Scalable incremental building with dynamic task dependencies | G Konat, S Erdweg, E Visser - … /ACM International Conference …, 2018 - ieeexplore.ieee.org | … full-fledged programming language with explicit task invocation, value and file inspection  facilities, and conditional and iterative language … That is, build scripting languages should not  require build engineers to apply complicated design patterns (eg, recursive [20] or generated …
Using Scopus's CiteScore for assessing the quality of computer science conferences | LI Meho - Journal of Informetrics, 2019 - Elsevier | … programming languages with software engineering. I also added categories for … conferences  in certain computer science subfields, such as computer vision and pattern recognition, tend  to have higher CiteScores than conferences in other subfields, such as theoretical computer …
Генерация кода для тестирования компиляторов с использованием генеративно-состязательных сетей | ВА Петухов - Автоматизация в промышленности, 2021 - avtprom.ru | … The problem of code generation in an arbitrary programming language is discussed, the  present-day results in this field, their merits and drawbacks are examined. Urgent problems  are identified, such as transposing language rules (syntaxis and some semantic rules) into …
Formal Analysis and Redesign of a Neural Network-Based Aircraft Taxiing System with VerifAI | DJ Fremont, J Chiu, DD Margineantu… - International Conference …, 2020 - Springer | … We define runway scenarios using the Scenic probabilistic programming language, and use  them to drive tests in the X-Plane flight … : a language for scenario specification and scene  generation. In: 40th ACM SIGPLAN Conference on Programming Language Design and …
Runtime and memory evaluation of data race detection tools | PH Lin, C Liao, M Schordan, I Karlin - International Symposium on …, 2018 - Springer | … Proceedings of the 2009 ACM SIGPLAN Conference on Programming Language Design  and Implementation, PLDI 2009, Dublin, Ireland, 15… Proceedings of the ACM SIGPLAN 2006  Conference on Programming Language Design and Implementation, Ottawa, Ontario, Canada, …
The RERS challenge: towards controllable and scalable benchmark synthesis | F Howar, M Jasper, M Mues, D Schmidt… - International Journal on …, 2021 - Springer | … This gives benchmark designers a method to challenge contributors that try to perform well  by excessive guessing. … The proposed tailoring of benchmarks focusing on the depths to  which programs have to be investigated in order to find all errors gives benchmark designer a …
Statistical assertions for validating patterns and finding bugs in quantum programs | Y Huang, M Martonosi - … the 46th International Symposium on Computer …, 2019 - dl.acm.org | … We extend an existing quantum programming language with the ability to specify quantum  assertions, which our tool then checks in a quantum … quantum programming languages, such  as ProjectQ [47] and Q# [48], these patterns are essential to the language design. With these …
Selecting a GC for Java Applications | S Tavakolisomeh, R Bruno, P Ferreira - Norsk IKT-konferanse for …, 2021 - ojs.bibsys.no | … In object-oriented programming languages, eg Java, automatic memory management  regulates all the objects’ allocations and deallocations in memory … In: Proceedings of the 40th  ACM SIGPLAN Conference on Programming Language Design and Implementation. pp. 31–47…
Partial order aware concurrency sampling | X Yuan, J Yang, R Gu - International Conference on Computer Aided …, 2018 - Springer | … Systematic testing [9, 16, 18, 28, 29, 30], instead of relying on the system scheduler, utilizes  formal methods to systematically schedule … of the 30th ACM SIGPLAN Conference on  Programming Language Design and Implementation, PLDI 2009, pp. 121–133. ACM, Dublin (…
AsyncRFJ: an asynchronous approach to reactive object-oriented programming | DJ Cardoso, JK Vizzotto, EK Piveta - … on Programming Languages, 2018 - dl.acm.org | … language, designed to provide a mechanism for writing programs featuring reactive  constructions in a small subset of a widely used OO programming language. … And the reactive  constructors are based on Elm [5], which is a functional reactive programming language that has its …
Lifting datalog-based analyses to software product lines | R Shahin, M Chechik, R Salay - … of the 2019 27th ACM Joint Meeting on …, 2019 - dl.acm.org | … In Proceedings of the 34th ACM SIGPLAN Conference on Programming Language  Design and Implementation (PLDI ’13). ACM, New York, NY, USA, 355–364. https://doi.org/10.1145/2491956.2491976  [5] Claus Brabrand, Márcio Ribeiro, Társis Tolêdo, and Paulo Borba. 2012. …
Transfinite Iris: Resolving an existential dilemma of step-indexed separation logic | S Spies, L Gäher, D Gratzer, J Tassarotti… - … Language Design and …, 2021 - dl.acm.org | … ACM SIGPLAN International Conference on Programming Language Design and Implementation  (PLDI ’21), June 20ś25, 2021, Virtual, Canada. ACM… is intuitive and suffices to prove  refinements of firstorder programs, it falls short when considering programming languages with …
Dawn: a high-level domain-specific language compiler toolchain for weather and climate applications | C Osuna, T Wicky, F Thuering, T Hoefler… - Supercomputing …, 2020 - superfri.org | … language for the domain of partial differential equation solvers using finite difference or  volume discretizations. The Dawn DSL language provides a parallel programming language …  In: Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and …
HackPPL: a universal probabilistic programming language | J Ai, NS Arora, N Dong, B Gokkaya, T Jiang… - … the 3rd ACM SIGPLAN …, 2019 - dl.acm.org | … This paper has overviewed the design motivations and their implementations in the building  of HackPPL. By integrating probabilistic programming directly into the development of a  general-purpose programming language, HackPPL aims to offer a compelling user experience …
Architectural implications of function-as-a-service computing | M Shahrad, J Balkind, D Wentzlaff - … of the 52nd Annual IEEE/ACM …, 2019 - dl.acm.org | … Seward, “Valgrind: A framework for heavyweight dynamic binary instrumentation,” in  Proceedings of the 28th ACM SIGPLAN Conference on Programming Language Design  and Implementation, PLDI ’07, (New York, NY, USA), pp. 89–100, ACM, 2007. …
Learning guided enumerative synthesis for superoptimization | S Singh, M Zhang, S Khurshid - International Symposium on Model …, 2019 - Springer | … The input specifications and the programming language constructs are encoded into a single  formula and any solution to the formula is a … In: Proceedings of the ACM SIGPLAN 1992  Conference on Programming Language Design and Implementation, PLDI 1992, pp. 341–352…
Susy: A programming model for productive construction of high-performance systolic arrays on fpgas | YH Lai, H Rong, S Zheng, W Zhang… - … Conference On …, 2020 - ieeexplore.ieee.org | … introduce SuSy, a programming framework composed of a domain-specific language (DSL)  and a compilation flow that enables programmers to productively build high-performance  systolic arrays on FPGAs. With SuSy, programmers express the design functionality in the form …
Scalable verification of probabilistic networks | S Smolka, P Kumar, DM Kahn, N Foster, J Hsu… - … SIGPLAN Conference …, 2019 - dl.acm.org | … over the last decade has programming language methodology been brought to bear on the  problem [5… Although programming languages for describing randomized networks exist [11…  ProbNetKAT is an expressive programming language based on Kleene Algebra with Tests, …
DJXPerf: Identifying Memory Inefficiencies via Object-centric Profiling for Java | B Li, P Su, M Chabbi, S Jiao, X Liu - arXiv preprint arXiv:2104.03388, 2021 - arxiv.org | … Java is the “go-to” programming language choice for developing scalable enterprise cloud  … annual ACM SIGPLAN conference on Object-oriented programming systems, languages,  … In Proceedings of the 31st ACM SIGPLAN Conference on Programming Language Design …
Practical Aspects of Declarative Languages | E Komendantskaya, YA Liu - 2020 - Springer | … cations, including design and implementation of declarative languages going beyond the …  Z3 received the 2015 ACM SIGPLAN Software System award and most influential tool paper in  the … His research spans programming languages related topics with the overarching goal of …
A programming framework for differential privacy with accuracy concentration bounds | E Lobo-Vesga, A Russo… - 2020 IEEE Symposium on …, 2020 - ieeexplore.ieee.org | … The compositional nature of differential privacy has motivated the design and implementation  of several programming languages aimed at helping a data analyst in programming differentially  private analyses. However, most of the programming languages for differential privacy …
EvalSeer: An Intelligent Gamified System for Programming Assignments Assessment | R Nabil, NE Mohamed, A Mahdy… - … Conference (MIUCC …, 2021 - ieeexplore.ieee.org | … of programming concepts by gradually improving their solutions and improving their  academic outcomes. The experiment designed and … by the LSTM model to create a language  model capable of comprehending the programming language structure as used in DeepSoft and …
An applied quantum Hoare logic | L Zhou, N Yu, M Ying - … Conference on Programming Language Design …, 2019 - dl.acm.org | We derive a variant of quantum Hoare logic (QHL), called applied quantum Hoare logic (aQHL  for short), by: 1. restricting QHL to a special class of preconditions and postconditions,  namely projections, which can significantly simplify verification of quantum programs and are …
Razzer: Finding kernel race bugs through fuzzing | DR Jeong, K Kim, B Shivakumar… - 2019 IEEE Symposium …, 2019 - ieeexplore.ieee.org | … We present a new fuzz testing mechanism which is specifically designed to detect races in  the kernel. It leverages both static and dynamic … design requirements to discover data races  in the kernel. Then we revisit existing tools from the perspective of meeting such requirements. …
An analysis of block-based programming environments for CS1 | LC Begosso, LR Begosso… - … in Education Conference  …, 2020 - ieeexplore.ieee.org | … will explore visual programming languages (VPLs), which are language environments that  use … If we can offer these languages to Computer Science first-year students, they will be …  based educational programming environment that was designed for beginners in programming. …
Unified Shader Programming in C++ | KA Seitz Jr, T Foley, SD Porumbescu… - arXiv preprint arXiv …, 2021 - arxiv.org | … design goals, we also aim to satisfy some design constraints: • Use a programming language  that is widely used in real-time computer … may involve co-opting different features depending  on the specifics of the language, but we think that the principles that guided our design …
FlowSpec: A declarative specification language for intra-procedural flow-Sensitive data-flow analysis | J Smits, G Wachsmuth, E Visser - Journal of Computer Languages, 2020 - Elsevier | … through data-flow analyses specified for the Green-Marl programming language. We present  some benchmarks that show that these analyses … Our language design for FlowSpec is a  very different approach which is not rooted in logic formulae. Instead we use domain names for …
Efficient module-level dynamic analysis for dynamic languages with module recontextualization | N Vasilakis, G Ntousakis, V Heller… - … 29th ACM Joint Meeting …, 2021 - dl.acm.org | … We present a new point in the dynamic analysis design space: module recontextualization  is an approach that operates at the granularity of … In Proceedings of the 2005 ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI ’05). Association …
Automated Design of Parallel Programs for Heterogeneous Platforms Using Algebra-Algorithmic Tools | A Doroshenko, O Beketov, M Bondarenko… - International Conference …, 2019 - Springer | … of parallel programs starting with construction of an algorithm scheme by superposition of  operations of Glushkov’s system of algorithmic algebra and then synthesize corresponding  source code in a target programming language on the basis of the scheme. The parallelization …
Twig: Profile-guided BTB prefetching for data center applications | TA Khan, N Brown, A Sriraman… - … 54th Annual IEEE/ACM …, 2021 - dl.acm.org | … We investigate the sensitivity of different design parameters on Twig’s effectiveness. First, we  compare the speedup achieved by Twig and … In Proceedings of the 21st annual ACM SIGPLAN  conference on Object-oriented programming systems, languages, and applications. 169…
ReQWIRE: Reasoning about reversible quantum circuits | R Rand, J Paykin, DH Lee, S Zdancewic - arXiv preprint arXiv:1901.10118, 2019 - arxiv.org | … This work builds heavily on the Quipper quantum programming language [6, 5], which  includes ancillae terminations that are optimized … Scalable Quantum Programming Language.  In: Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and …
How could Neural Networks understand Programs? | D Peng, S Zheng, Y Li, G Ke, D He, TY Liu - arXiv preprint arXiv …, 2021 - arxiv.org | … semantics, captures the meaning of a programming language by defining rules for how its …  Inspired by the programming language theory, we propose a code representation learning  paradigm … We also design efficient training objectives for OSCAR to largely facilitate the program …
Approaching polyglot programming: what can we learn from bilingualism studies? | RL Hao, EL Glassman - … Usability of Programming Languages …, 2020 - drops.dagstuhl.de | … programmers use and are affected by their use of multiple programming languages, we can  inform programming language design in the context of its use with other languages… multiple  programming languages, working towards increasing programmer productivity and efficiency. …
Repairing and mechanising the JavaScript relaxed memory model | C Watt, C Pulte, A Podkopaev, G Barbier… - … SIGPLAN Conference …, 2020 - dl.acm.org | Modern JavaScript includes the SharedArrayBuffer feature, which provides access to true  shared memory concurrency. SharedArrayBuffers are simple linear buffers of bytes, and the  JavaScript specification defines an axiomatic relaxed memory model to describe their …
EffectiveSan: type and memory error detection using dynamically typed C/C++ | GJ Duck, RHC Yap - … SIGPLAN Conference on Programming Language …, 2018 - dl.acm.org | Low-level programming languages with weak/static type systems, such as C and C++, are  vulnerable to errors relating to the misuse of memory at runtime, such as (sub-) object bounds  overflows,(re) use-after-free, and type confusion. Such errors account for many security and …
λPSI: exact inference for higher-order probabilistic programs | T Gehr, S Steffen, M Vechev - … Conference on Programming Language …, 2020 - dl.acm.org | We present λPSI, the first probabilistic programming language and system that supports  higher-order exact inference for probabilistic programs with first-class functions, nested inference  and discrete, continuous and mixed random variables. λPSI’s solver is based on symbolic …
On the Understandability of Language Constructs to Structure the State and Behavior in Abstract State Machine Specifications: A Controlled Experiment | P Paulweber, G Simhandl, U Zdun - Journal of Systems and Software, 2021 - Elsevier | … programming languages offering the language construct interfaces in Java or how to model  interfaces through and abstract class in C++. … Based on the evidence found in this research,  a possible use of either Interfaces and Traits in ASM language designs should provide a …
Using dynamically inferred invariants to analyze program runtime complexity | TV Nguyen, D Ishimwe, A Malyshev… - … Security from Design to …, 2020 - dl.acm.org | … of this work owned by others than ACM must be honored. Abstracting with credit is  permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists,  requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. …
Adaptive low-overhead scheduling for periodic and reactive intermittent execution | K Maeng, B Lucia - … SIGPLAN Conference on Programming Language …, 2020 - dl.acm.org | … ACM SIGPLAN International Conference on Programming Language Design and  Implementation (PLDI ’20), June 15–20, 2020, London, UK. ACM, … Copyrights for components of  this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy …
Deep reinforcement learning for syntactic error repair in student programs | R Gupta, A Kanade, S Shevade - Proceedings of the AAAI Conference …, 2019 - ojs.aaai.org | … Novice programmers often struggle with the formal syntax of programming languages. In the  traditional classroom setting, they can make … Towards this, we design a novel programming  language correction framework amenable to reinforcement learning. The framework allows …
SQL Generation from Natural Language Using Supervised Learning and Recurrent Neural Networks | W Dahhane, T Bouchentouf… - Artificial Intelligence and …, 2020 - books.google.com | … data users are required to have command over SQL or equivalent interface language.  Hence, using a system that can convert a natural … In: Proceedings of the 38th ACM SIGPLAN  Conference on Programming Language Design and Implementation, pp. 452–466 (2017) 25. Li…
JShrink: in-depth investigation into debloating modern Java applications | BR Bruce, T Zhang, J Arora, GH Xu, M Kim - … the 28th ACM Joint Meeting …, 2020 - dl.acm.org | … We highlight several nuanced extensions that we designed to ensure type safety and  behavior preservation. … to retain code statically reachable from public APIs or main method  entries, since designing such oracle would be exactly the same task we undertook in JShrink. …
The lands platform: lan. guages and d. omain s. yntax | N Papoulias - … of the 12th ACM SIGPLAN International Conference on …, 2019 - dl.acm.org | … Despite their enormous diversity, programming languages and DSLs do share common  lexical and syntactical structures. Moreover during conception of new language systems, a  designer might wish to test and experiment with abstractions from other …
Non-native english speakers learning computer programming: Barriers, desires, and design opportunities | PJ Guo - … of the 2018 CHI conference on human factors in …, 2018 - dl.acm.org | … People from nearly every country are now learning computer programming, yet the majority  of programming languages, libraries, documentation, and instructional materials are in  English. What barriers do non-native English speakers face when learning from English-based …
Cluster-based analysis of novice coding misconceptions in block-based programming | A Emerson, A Smith, FJ Rodríguez, EN Wiebe… - … on Computer Science …, 2020 - dl.acm.org | … Using the interaction data from students’ programming activities, we identify three families  of student misconceptions and discuss their … for introductory programming assignments.  In Proceedings of the ACM SIGPLAN Conference on Programming Language Design and …
Eliminating object reference checks by escape analysis on real-time Java virtual machine | W Feng, X Shi, W Wang - Cluster Computing, 2019 - Springer | … The real-time specification for Java (RTSJ) makes Java to be a real-time programming language.  However, the RTSJ’s memory management … In: Proceeding of the 2007 ACM SIGPLAN  Conference on Programming Language Design and Implementation, pp. 290–299 (2007) …
Generation of Call Graph for Java Higher Order Functions | P Bedadala, D Manasa, LS Nair - … 5th International Conference …, 2020 - ieeexplore.ieee.org | … programming language constructs are designed using the language constructs. Conventionally  the compilers of the strongly typed programming language are like C / C++ have been  designed … ACM SIGPLAN conference on Object-oriented programming, systems, languages, …
Accelerating applications using edge tensor processing units | KC Hsu, HW Tseng - Proceedings of the International Conference for …, 2021 - dl.acm.org | … To demonstrate the importance of designing algorithms to wisely use Edge TPU instructions,  we explain the design of an efficient GEMM on Edge TPUs, a fundamental linear-algebra tool  for matrices. GEMM takes two 2-dimensional tensors (matrices) as inputs and produces a …
Programmable program synthesis | L D'Antoni, Q Hu, J Kim, T Reps - International Conference on Computer …, 2021 - Springer | … programmers as well as by end-users, we need to design programmable synthesis frameworks  that (i) are not tailored to specific domains or languages… One can intuitively understand  these scenarios as synthesis problems over different programming languages (search spaces)…
Fast, accurate, and scalable memory modeling of GPGPUs using reuse profiles | Y Arafa, AH Badawy, G Chennupati, A Barai… - … Conference on …, 2020 - dl.acm.org | … Finally, we illustrate that PPT-GPU-Mem can be used for design space exploration and for  predicting the cache performance of future … A GPU program or kernel written in CUDA  programming language is represented as a grid of thread blocks executing concurrently. GPU …
Bounding data races in space and time | S Dolan, KC Sivaramakrishnan… - ACM SIGPLAN …, 2018 - dl.acm.org | … We intend this model to be the basis of the multicore implementation for the OCaml  programming language, and hope it is of interest to the designers of other safe languages. In  future work, we plan to extend our currently spartan model with other types of atomics. In particular, …
New applications of software synthesis: Verification of configuration files and firewall repair | R Piskac - International Static Analysis Symposium, 2018 - Springer | … files and derives rules for building a language model from the given data set. The resulting  language model can be used to verify new … We observed that FireMason is able to efficiently  generate correct firewalls meeting administrators’ examples, without introducing any new …
Visualizing The Intermediate Representation of Just-in-Time Compilers | HC Lim, S Kobourov - arXiv preprint arXiv:2107.00063, 2021 - arxiv.org | … Proceedings of the ACM SIGPLAN’92 Conference on Programming Language Design and  Implementation (PLDI), San Francisco, … Proceedings of the ACM SIGPLAN 2005 Conference  on Programming Language Design and Implementation, Chicago, IL, USA, June 12-…
PWCT: a novel general-purpose visual programming language in support of pervasive application development | MS Fayed, M Al-Qurishi, A Alamri, MA Hossain… - CCF Transactions on …, 2020 - Springer | … Experts in computer graphics, programming languages, and human–computer … design  of Kodu: a tiny visual programming language for children on the Xbox 360. In: Proceedings of  the 38th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages…
Memfix: static analysis-based repair of memory deallocation errors for c | J Lee, S Hong, H Oh - Proceedings of the 2018 26th ACM Joint Meeting …, 2018 - dl.acm.org | … algorithm for the simple language in Section 3.1, our implementation supports most of the  features of the C programming language, including procedure … In Proceedings of the 27th  ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’06). …
High-Performance Defunctionalisation in Futhark | AK Hovgaard, T Henriksen, M Elsman - … Trends in Functional Programming, 2018 - Springer | … , CE: Futhark: purely functional GPU-programming with nested parallelism and in-place array  updates. In: Proceedings of the 38th ACM SIGPLAN Conference on Programming Language  Design and Implementation, PLDI 2017, pp. 556–571. ACM, June 2017Google Scholar …
Synthesizing structured CAD models with equality saturation and inverse transformations | C Nandi, M Willsey, A Anderson, JR Wilcox… - … SIGPLAN Conference …, 2020 - dl.acm.org | … In Proceedings of the 41st ACM SIGPLAN International Conference on Programming  Language Design and Implementation (PLDI ’20), … The programming languages and machine  learning communities have developed techniques to decompile ComputerAided Design (CAD) …
Transactional concurrency control for intermittent, energy-harvesting computing systems | E Ruppel, B Lucia - … SIGPLAN Conference on Programming Language …, 2019 - dl.acm.org | Batteryless energy-harvesting devices are computing platforms that operate in environments  where batteries are not viable for energy storage. Energy-harvesting devices operate  intermittently, only as energy is available. Prior work developed software execution models robust …
Interactive Program Synthesis by Augmented Examples | T Zhang, L Lowmanstone, X Wang… - … of the 33rd Annual ACM …, 2020 - dl.acm.org | … To design realistic programming tasks for regular expressions, we searched on Stack  Overflow (SO) using relevant keywords such as “… In Proceedings of the 37th ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI ’16). Association for …
A project-based learning experience in a compilers course | A Lara, L Quesada - Proceedings of the ACM Conference on Global …, 2019 - dl.acm.org | … design their own programming language. To guide them, we requested in stage 1 that each  group should design a programming language capable of solving three programming … By  allowing students to design their own language, we expected to increase their motivation. This …
Towards the application of recommender systems to secure coding | FD Nembhard, MM Carvalho, TC Eskridge - EURASIP Journal on …, 2019 - Springer | … The approach currently focuses on the Java programming language but is general enough to  apply to other programming languages. … In this work, a methodology is proposed, designed,  and evaluated to help programmers fix potential vulnerabilities as they type code during …
Sequential and parallel improvements in a concurrent functional programming language | M Schmidt-Schauß, D Sabel, N Dallmeyer - … of Declarative Programming, 2018 - dl.acm.org | … Distributing and parallelizing computation tasks are important operations in programming  and programming languages. The design and … However, to the best of our knowledge, for a  concurrent programming language with shared memory and side-effecting computations there …
Software engineering collaboratories (SEClabs) and collaboratories as a service (CaaS) | E Sherman, R Dyer - Proceedings of the 2018 26th ACM Joint Meeting …, 2018 - dl.acm.org | … Then, we describe in detail an instance of SEClab, designed for a specific software … Moreover,  researchers from software engineering and programming languages make use of heavy-…  how program analysis researchers in the programming language and software engineering …
Mining constraints for grammar fuzzing | M Mera - … of the 28th ACM SIGSOFT International Symposium on …, 2019 - dl.acm.org | … is the use of a language that is easy to instrument and reason about. Additionally, the large  number of programming languages that can be … In Proceedings of the ACM SIGPLAN 2008  Conference on Programming Language Design and Implementation, Tucson, AZ, USA, June 7-…
Faster and Worst-Case Optimal E-matching via Reduction to Conjunctive Queries | Y Zhang - effect.systems | … In Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design  and Implementation (Portland, OR, USA) (PLDI ’15). Association for Computing Machinery,  New York, NY, USA, 1–11. https://doi.org/10.1145/2737924.2737959 [10] Varot Premtoon, …
Languages of Games and Play: A Systematic Mapping Study | R van Rozen - ACM Computing Surveys (CSUR), 2020 - dl.acm.org | … We highlight language design decisions and notable features, including mentions of language  reuse and formal semantics. When possible, we use the language design patterns for … Here,  we describe a programming language perspective on game development. For creating a …
Formal verification of quantum algorithms using quantum hoare logic | J Liu, B Zhan, S Wang, S Ying, T Liu, Y Li… - … conference on computer …, 2019 - Springer | … programming has been conducted in the last decade [16, 45, 51, 53], as surveyed in [27,  52]. In particular, several quantum programming languages … Here, we focus on listing some  tools designed for special kinds of systems. EasyCrypt [10, 11] is an interactive framework for …
Fault-tolerant distributed reactive programming | R Mogk, L Baumgärtner, G Salvaneschi… - … Programming  …, 2018 - drops.dagstuhl.de | … In this paper, we extend REScala [44] to create a fault-tolerant reactive programming language  for … We design language abstractions for error propagation and adapt the runtime semantics  … of the 16th ACM SIGPLAN international conference on Functional programming, ICFP, …
Conflict abstractions and shadow speculation for optimistic transactional objects | T Dickerson, E Koskinen, P Gazzillo… - … Programming Languages …, 2019 - Springer | … The mechanisms described in this paper are designed for transactional objects and currently  don’t support mixtures between transactional … In: Proceedings of the 32nd ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2011, San Jose, …
Extracting taint specifications for javascript libraries | CA Staicu, MT Torp, M Schäfer, A Møller… - … International Conference …, 2020 - dl.acm.org | … In Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design  and Implementation, PLDI 2018, Philadelphia, … In Proceedings of the 40th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2019, Phoenix, AZ, …
Development of Social Media User Interface Portal for Maintaining Students Portfolio | A Krishnan, A Ganesh, S Gayathri, S Koushik… - Inventive …, 2021 - Springer | … other programming language, Unified Modeling Language can be described as a visual  representation of a complex system. The language … In: Proceedings of the 30th ACM SIGPLAN  conference on programming language design and implementation, pp 50–62Google Scholar …
Inferring How Novice Students Learn to Code: Integrating Automated Program Repair with Cognitive Model | Y Liang, W Wu, L Wu, M Wang - CCF Conference on Big Data, 2019 - Springer | … Python programming course, we collect a real dataset of 6885 attempts, including nine  assignments and 1037 novice students. We design a … Third, we accurately categorize the types  of program errors and relate them with the concepts of a programming language. As a result, …
Programming is modeling | R Cleaveland - International Symposium on Leveraging Applications of …, 2018 - Springer | … of this note I will explain this point of view, and suggest implications it has for research on both  modeling and programming languages. … Nevertheless, I believe that a robust sublanguaging  feature, designed with the viewpoint of making programming languages more robust and …
Research on visual programming system of gesture interaction interface in VR | WY Xiao, JZ Duan, CQ Xue - … the 2020 the 4th International Conference …, 2020 - dl.acm.org | … design methods in this article has important reference value for interface design in future. …  Therefore, this article uses a table format programming language structure to build a modular  … In Proceedings of the 2017 ACM SIGPLAN International Symposium on New Ideas, New …
On the nature of symbolic execution | FS De Boer, M Bonsangue - International Symposium on Formal Methods, 2019 - Springer | … a basic programming language with a statically fixed number of programming variables. The  concrete transition system for this basic language … , we extend the basic theory of symbolic  execution to a programming language with recursive procedures which are called by a call-by-…
The design and implementation of hyperupcalls | N Amit, M Wei - 2018 {USENIX} Annual Technical Conference  …, 2018 - usenix.org | … In this paper, we describe the design and implementation of hyperupcalls 1, a technique …  Hyperupcalls are easy to build: they are written in a high level language such as C, and we …  Our work is inspired by these studies, and we aim to design a flexible interface between the …
Context term calculus for rewriting systems | RS Shevchenko - PROBLEMS IN PROGRAMMING, 2018 - pp.isofts.kiev.ua | … programming language defined in hierarchical contexts, which can be directly mapped to  context-full term in rewriting rule. Type analysis for a programming language … Proceedings of  the ACM SIGPLAN 1988 Conference on Programming Language Design and Implementation. …
M3: Semantic api migrations | B Collie, P Ginsbach, J Woodruff… - … Conference on …, 2020 - ieeexplore.ieee.org | … Efficiently searching for sections within an application that satisfy particular criteria is a  hard problem to express using traditional programming languages. The CAnDL language [20]  allows for declarative specification of search patterns, which are compiled to constraint-…
Dmon: Efficient detection and correction of data locality problems using selective profiling | TA Khan, I Neal, G Pokam, B Mozafari… - … Systems Design and …, 2021 - eecs.umich.edu | … the key design challenge for accurately and efficiently detecting data locality problems in §2.  We describe selective profiling in §3, DMon’s design in … In Proceedings of the 39th ACM  SIGPLAN Conference on Programming Language Design and Implementation, pages 151–165. …
The Move Prover | JE Zhong, K Cheang, S Qadeer, W Grieskamp… - International Conference …, 2020 - Springer | … Boogie IVL is a simple imperative programming language that supports local and global  variables, branching and loops, and procedures and procedure calls. Boogie is designed for  verification, so it also supports pre- and post-conditions, loop invariants, and global axioms. …
Uncovering the Hidden Dangers: Finding Unsafe Go Code in the Wild | J Lauinger, L Baumgärtner, AK Wickert… - … Conference on Trust …, 2020 - ieeexplore.ieee.org | … Abstract—The Go programming language aims to provide memory and thread safety  through measures such as automated memory … We designed and performed a study of Go  unsafe usage to answer the following research questions: RQ1 How prevalent is unsafe in Go …
Nullaway: Practical type-based null safety for java | S Banerjee, L Clapp, M Sridharan - … of the 2019 27th ACM Joint Meeting …, 2019 - dl.acm.org | … In Proceedings of the ACM SIGPLAN’94 Conference on Programming Language Design  and Implementation (PLDI), Orlando, Florida, USA, June 20-24, 1994. 230ś241. https://doi.org/10.1145/178243.178263  [23] Werner Dietl, Stephanie Dietzel, Michael D. …
Supply-Chain Vulnerability Elimination via Active Learning and Regeneration | N Vasilakis, A Benetopoulos, S Handa… - … SIGSAC Conference …, 2021 - dl.acm.org | … Built-in primitives: This class contains primitives offered commonly by the standard libraries  of different high-level programming languages, including operations for arithmetic—eg, log,  sqrt, etc.— and string manipulation—eg, toUpper, toAsciiCode. The class of built-in primitives …
Configuring test generators using bug reports: a case study of GCC compiler and Csmith | MRI Rabin, MA Alipour - … of the 36th Annual ACM Symposium on Applied …, 2021 - dl.acm.org | … Many programming languages have specialized random test generators that use the language  grammar and language-specific heuristics to produce test programs in those languages;  Csmith [26] for C, jsFunFuzz [24] for JavaScript, and Go-Fuzz [11] for Go are good examples …
Structured Data | S Brandauer - 2018 - diva-portal.org | … Programming language-design and run-time-implementation require detailed knowledge  about the programs that users want to implement. Acquiring this knowledge is hard, and there  is little tool support to effectively estimate whether a proposed tradeoff actually makes sense …
A Bidirectional LSTM Language Model for Code Evaluation and Repair | M Rahman, Y Watanobe, K Nakamura - Symmetry, 2021 - mdpi.com | … This approach is not similar to our proposed BiLSTM model, as their model is developed for  the C# programming language in the .Net … In the future, we plan to evaluate our model using  larger datasets and different programming languages. We will also seek to optimize various …
Two-Level Study of Object-Oriented Programming by University Students | TA Dmitrieva, AV Prutzkow, AN Pylkin - … технологии и ИТ …, 2019 - sitito.cs.msu.ru | … Mastering the technology of structured programming allows an average level skilled specialist  to design programming code of increased complexity that will be abundant in this case. …  Below we shall review programming languages as well as their peculiarities used on this level. …
Code smells for multi-language systems | M Abidi, M Grichi, F Khomh… - … 24th European Conference …, 2019 - dl.acm.org | … the literature discuss the occurrences of design defects for mono-language systems. However,  … this set of programming languages and then include more programming languages. We  collected … by reconstruction of distributed control flow,” in ACM SIGPLAN Notices, vol. 40, no. 6…
ReduKtor: How we stopped worrying about bugs in kotlin compiler | D Stepanov, M Akhin, M Belyaev - … International Conference on …, 2019 - ieeexplore.ieee.org | … In this experience paper we present an approach to automatic input reduction for the Kotlin  programming language. The approach is based on a combination of Kotlin-specific  transformations, program slicing, and hierarchical delta debugging, which are highly synergistic. It …
Effective use of SMT solvers for program equivalence checking through invariant-sketching and query-decomposition | S Gupta, A Saxena, A Mahajan, S Bansal - … Conference on Theory and …, 2018 - Springer | Program equivalence checking is a fundamental problem in computer science with applications  to translation validation and automatic synthesis of compiler optimizations. Contemporary  equivalence checkers employ SMT solvers to discharge proof obligations generated by …
VeriPhy: Verified controller executables from verified cyber-physical system models | B Bohrer, YK Tan, S Mitsch, MO Myreen… - … Programming Language …, 2018 - dl.acm.org | … In Proceedings of 39th ACM SIGPLAN Conference on Programming Language Design and  Implementation (PLDI’18). ACM, New York, NY, USA, … This verification step is made easier  because CakeML is itself a high-level programming language with an accompanying suite of …
13 Programming Paradigms and Beyond | S Krishnamurthi, K Fisler - The Cambridge Handbook of …, 2019 - books.google.com | … However, as programming languages and our technical understanding of them evolve, this  notion is harder to maintain. This … short, language design for differently abled users is an open  area. Accessible interfaces cannot simply be bolted onto existing designs: language design …
Type-Driven Cross-Programming for Android and LEGO Mindstorms Interoperability | A Spanò, A Cortesi, G Zausa - IFIP International Conference on Computer …, 2019 - Springer | … of designing with types for years [41], showing how writing programs with the Hindley-Milner  type system [10] shifts the emphasis towards type design and improves the programmer’s  understanding of the static properties of software [32]. Even more advanced languages based …
Learning Block Programming using Scratch among School Children in Malaysia and Australia: An Exploratory Study | N Zamin, H Ab Rahim, KS Savita… - … Conference on …, 2018 - ieeexplore.ieee.org | … programming is suitable for children aged between 8 to 12 years old who are too young to  understand and learn the logic and scripting language in view of their low maturity level and lack  of exposure to programming. … Alice is free 3D programming tool designed by the Carnegie …
Dynamic Shared Memory Pool Management Method in Soft Real-Time Systems | AP Nyrkov, KA Ianiushkin, AA Nyrkov… - … IEEE Conference of …, 2020 - ieeexplore.ieee.org | … In this paper, we propose memory management method for soft RTOS, which designed to  be used in heavily dynamic memory depended applications, … Proceedings of the 40th ACM  SIGPLAN Conference on Programming Language Design and Implementation. ACM, 2019. …
A survey of compiler testing | J Chen, J Patra, M Pradel, Y Xiong, H Zhang… - ACM Computing …, 2020 - dl.acm.org | … Table 2 gives an overview of the programming languages targeted by the various approaches  discussed in this section. Overall, the … , we need to carefully understand the rules for valid  programs in other programming languages and design static analyses to best approximate …
Fixing code that explodes under symbolic evaluation | S Porncharoenwase, J Bornholt, E Torlak - International Conference on …, 2020 - Springer | … Deforestation is a classic optimization for functional programming languages that eliminates  intermediate lists. Under concrete evaluation, … for dynamic languages. In: Proceedings of  the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation (…
Saver: scalable, precise, and safe memory-error repair | S Hong, J Lee, J Lee, H Oh - … ACM/IEEE 42nd International Conference …, 2020 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored.  Abstracting with credit is permitted. To copy … , we have carefully designed a static heap analysis  that can generate precise object flow graphs in practice. The key design decisions are path-…
Binary rewriting without control flow recovery | GJ Duck, X Gao, A Roychoudhury - … on Programming Language Design …, 2020 - dl.acm.org | … For this, we develop several new instruction patching tactics, such as instruction padding and  eviction, that are designed to boost coverage … • We present E9Patch, a powerful static binary  rewriting tool designed to scale to very large binaries. To do so, E9Patch only uses binary …
Assessing Programming Language Impact on Software Development Productivity Based on Mining OSS Repositories | A Muna - ACM SIGSOFT Software Engineering Notes, 2019 - dl.acm.org | … in designing various programming languages. Nowadays, there are dozens of programming  languages in use, and new languages and/or language … The nature of languages as a special  software tool makes it difficult to find measures to draw objective conclusions about them. …
Precise static happens-before analysis for detecting uaf order violations in android | D Wu, J Liu, Y Sui, S Chen, J Xue - 2019 12th IEEE Conference …, 2019 - ieeexplore.ieee.org | … ceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and …  the 30th ACM SIGPLAN Conference on Programming Language Design and … of the 35th  ACM SIGPLAN Conference on Programming Language Design and Implementation, 2014. …
A dataset for github repository deduplication | D Spinellis, Z Kotti, A Mockus - … of the 17th international conference on …, 2020 - dl.acm.org | … The overlap of files between projects, as given by the files’ token hashes, was computed for  certain thresholds and programming languages. JavaScript … Statistical Language Models. In  Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and …
Fairfuzz: A targeted mutation strategy for increasing greybox fuzz testing coverage | C Lemieux, K Sen - … of the 33rd ACM/IEEE International Conference on …, 2018 - dl.acm.org | … In Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design  … In Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design  … In Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design …
Ten Million Users and Ten Years Later: Python Tutor's Design Guidelines for Building Scalable and Sustainable Research Software in Academia | P Guo - The 34th Annual ACM Symposium on User Interface …, 2021 - dl.acm.org | … To illustrate this method, we present the design and implementation of Python Tutor (pythontutor.  com), a code visualization … of design guidelines: 1) user experience design for scale and  sustainability, 2) software architecture design for long-term sustainability, and 3) designing …
A survey of machine learning for big code and naturalness | M Allamanis, ET Barr, P Devanbu… - ACM Computing Surveys …, 2018 - dl.acm.org | … We contrast programming languages against natural languages and discuss how these  similarities and differences drive the design of … Then we describe the software engineering  and programming language applications of probabilistic source code models (Section 5). Finally, …
A General Framework for Compositional Network Modeling | R Beckett, R Mahajan - Proceedings of the 19th ACM Workshop on Hot …, 2020 - dl.acm.org | … preliminary design of such an expressive yet compact modeling language called Zen. At its  core, Zen is an expressionoriented language … In Proceedings of the 35th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI ’14, page 530–541, …
Singularity: Pattern fuzzing for worst case complexity | J Wei, J Chen, Y Feng, K Ferles, I Dillig - … 2018 26th ACM Joint Meeting …, 2018 - dl.acm.org | … However, as standard in genetic programming, the fitness function does not have to be  exactly the same as the optimization objective. We design our … In Proceedings of the 36th  ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’15). …
Gigahorse: thorough, declarative decompilation of smart contracts | N Grech, L Brent, B Scholz… - … International Conference …, 2019 - ieeexplore.ieee.org | … designs of these virtual machines are optimized for massively replicated execution of smart  contracts. The bytecode effectively represents an assembly language designed for … Datalog  is less of a programming language and more of a specification language, since computation is …
Phoenix: Automated data-driven synthesis of repairs for static analysis violations | R Bavishi, H Yoshida, MR Prasad - … of the 2019 27th ACM Joint Meeting …, 2019 - dl.acm.org | … Copyrights for components of this work owned by others than ACM must be honored.  Abstracting with credit is permitted. To copy otherwise, or republish, … In Proceedings of the 36th  ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’15). …
Nvtraverse: in nvram data structures, the destination is more important than the journey | M Friedman, N Ben-David, Y Wei, GE Blelloch… - … SIGPLAN Conference …, 2020 - dl.acm.org | The recent availability of fast, dense, byte-addressable non-volatile memory has led to  increasing interest in the problem of designing durable data structures that can recover from  system crashes. However, designing durable concurrent data structures that are correct and …
Position: Gdpr compliance by construction | M Schwarzkopf, E Kohler, MF Kaashoek… - … , Polystores, and Analytics …, 2019 - Springer | … Privacy policy languages designed for computers rather than human lawyers could be a …  Applied to an RDBMS, our design requires changes to classic schema design and query … that  span databases, distributed systems, programming languages, and security. We are excited to …
A Coq formalisation of SQL's execution engines | V Benzaken, E Contejean, C Keller… - International Conference …, 2018 - Springer | … To reach our goals, we first design a high-level Coq specification for data-centric operators  intended to capture their essence. We, then, … Proceedings of the 37th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2016, Santa Barbara, …
AutoSA: A Polyhedral Compiler for High-Performance Systolic Arrays on FPGA | J Wang, L Guo, J Cong - The 2021 ACM/SIGDA International Symposium …, 2021 - dl.acm.org | … In Proceedings of the 12th ACM SIGPLAN symposium on Principles and practice of parallel  programming. 101–111. … Spatial: A language and compiler for application accelerators. In  Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and …
Data-Driven Synthesis of Provably Sound Side Channel Analyses | J Wang, C Sung, M Raghothaman… - … Conference on …, 2021 - ieeexplore.ieee.org | … Our goal in this work is to assist the analysis designer in automating the development. This  problem has also been the subject of exciting … training set, not all programs written in the  same programming language (JavaScript). They also need to manually modify the training …
StateFormer: fine-grained type recovery from binaries using generative state modeling | K Pei, J Guan, M Broughton, Z Chen, S Yao… - … 29th ACM Joint Meeting …, 2021 - dl.acm.org | … In the pretraining step, the model is trained with Generative State Modeling (GSM), a novel  task that we design to teach the model to statically approximate execution effects of assembly  … In 34th ACM SIGPLAN conference on Programming language design and implementation. …
Chemoinformatics and structural bioinformatics in OCaml | F Berenger, KYJ Zhang, Y Yamanishi - Journal of cheminformatics, 2019 - Springer | … For a course on programming languages and types, we refer interested readers to Pierce [13].  OCaml … of the fifth ACM SIGPLAN international conference on functional programming. ICFP  ’00. … In: Proceedings of the 6th conference on symposium on opearting systems design & …
PrideMM: Second Order Model Checking for Memory Consistency Models | S Cooksey, S Harris, M Batty, R Grigore… - … Symposium on Formal …, 2019 - Springer | … written in the LISA language, and the output is a boolean result. LISA is a programming  language that was designed for studying memory … In: Proceedings of the 35th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2014, pp. 530–541. …
FormuLog: Datalog for static analysis involving logical formulae | A Bembenek, S Chong - arXiv preprint arXiv:1809.06274, 2018 - arxiv.org | … out of the scope of Datalog-based languages. While this paper focuses on the design of  FormuLog and one of the analyses we have implemented in it, it also touches on a prototype  implementation of the language and identifies performance optimizations that we believe will be …
Loop Parallelization using Dynamic Commutativity Analysis | C Vasiladiotis, RC Lozano, M Cole… - 2021 IEEE/ACM …, 2021 - ieeexplore.ieee.org | Automatic parallelization has largely failed to keep its promise of extracting parallelism from  sequential legacy code to maximize performance on multi-core systems outside the numerical  domain. In this paper, we develop a novel dynamic commutativity analysis (DCA) for …
Compiler-based timing for extremely fine-grain preemptive parallelism | S Ghosh, M Cuevas, S Campanoni… - … Conference for High …, 2020 - ieeexplore.ieee.org | … Interrupts are avoided in the design of cooperative threads (which we call fibers here), and  consequently these can achieve much finer granularity [55]. With fibers, the locus of each …  The Charm parallel programming language and system: Part II–the runtime system. Tech. Rep. …
Sorcar: Property-Driven Algorithms for Learning Conjunctive Invariants | D Neider, S Saha, P Garg, P Madhusudan - International Static Analysis …, 2019 - Springer | … The Sorcar algorithm presented in this paper has the following design features (also see  Table 1). First, it is property-driven—in other … In: Proceedings of the 35th ACM SIGPLAN  Conference on Programming Language Design and Implementation, PLDI 2014, pp. 440–451. …
Renaissance: Benchmarking suite for parallel applications on the jvm | A Prokopec, A Rosà, D Leopoldseder… - … SIGPLAN Conference …, 2019 - dl.acm.org | Established benchmark suites for the Java Virtual Machine (JVM), such as DaCapo, ScalaBench,  and SPECjvm2008, lack workloads that take advantage of the parallel programming  abstractions and concurrency primitives offered by the JVM and the Java Class Library. …
A brief tour of formally secure compilation | M Busi, L Galletta - 3rd Italian conference on cyber security, ITASEC …, 2019 - iris.imtlucca.it | … In this section, we briefly survey some features of target languages and lowlevel architectural  mechanisms and tools that a designer can … Proceedings of the 2000 ACM SIGPLAN  Conference on Programming Language Design and Implementation (PLDI), Vancouver, Britith …
Verifying an HTTP key-value server with Interaction Trees and VST | H Zhang, W Honoré, N Koh, Y Li, Y Li… - … Conference on …, 2021 - drops.dagstuhl.de | … , and this design leads to a more straightforward connection to the CertiKOS socket  specification compared to some alternative designs. We … We also develop an executable parser  in Gallina, Coq’s internal functional programming language, for the subset of requests KVServer …
Functional programming with λ syntax: a progress report | U Gérard, D Miller - … on Logical Frameworks and Meta-Languages …, 2018 - hal.inria.fr | … In this progress report, we highlight the design of the functional programming language MLTS  which we have recently proposed elsewhere. This language uses the λ-tree syntax approach  to encoding data structures that contain bindings. In this setting, bound variables never …
Blech, imperative synchronous programming! | F Gretz, FJ Grosch - Languages, Design Methods, and Tools for Electronic …, 2020 - Springer | … We discuss how separate compilation and usage of structured data can be achieved in a  synchronous imperative programming language for embedded systems. Our focus is on the  practical aspects of these questions regarding expressiveness in programs as well as causality …
